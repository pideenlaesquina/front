{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pos: {\n        lat: 4.603843,\n        lng: -74.062705\n      },\n      stores: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      pos: this.getPosition()\n    });\n    this.setState({\n      stores: this.getPosition()\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.pos);\n    console.log(this.state.stores);\n  }\n\n  async getPosition() {\n    let ip = await fetch('https://api.ipify.org').then(response => response.text());\n    pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(response => response.json());\n    return {\n      lat: parseFloat(pos.latitude),\n      lng: parseFloat(pos.longitude)\n    };\n  }\n\n  getUserPosition() {\n    let coordinates = null; //Updated from browser\n\n    if (navigator.geolocation) {\n      coordinates = navigator.geolocation.getCurrentPosition(function (position) {\n        console.log(this.pos);\n        return {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      }, function () {\n        return null;\n      });\n    }\n\n    console.log(coordinates);\n    return coordinates;\n  }\n\n  async getStores(pos) {\n    let url = '/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n    let stores = await fetch(url).then(response => response.json());\n    return stores.stores;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      pos: this.state.pos,\n      stores: this.state.stores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","App","constructor","props","state","pos","lat","lng","stores","componentDidMount","setState","getPosition","componentDidUpdate","console","log","ip","fetch","then","response","text","json","parseFloat","latitude","longitude","getUserPosition","coordinates","navigator","geolocation","getCurrentPosition","position","coords","getStores","url","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAC;AAACC,QAAAA,GAAG,EAAC,QAAL;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OADO;AAEXC,MAAAA,MAAM,EAAC;AAFI,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GACjB;AACE,SAAKC,QAAL,CAAc;AAACL,MAAAA,GAAG,EAAC,KAAKM,WAAL;AAAL,KAAd;AACA,SAAKD,QAAL,CAAc;AAACF,MAAAA,MAAM,EAAC,KAAKG,WAAL;AAAR,KAAd;AACD;;AAEDC,EAAAA,kBAAkB,GAClB;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,GAAvB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWI,MAAvB;AACD;;AAED,QAAMG,WAAN,GACA;AACE,QAAII,EAAE,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAAL,CAA+BC,IAA/B,CAAoCC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA9C,CAAf;AACAd,IAAAA,GAAG,GAAG,MAAMW,KAAK,CAAC,mFAAiFD,EAAlF,CAAL,CAA2FE,IAA3F,CAAgGC,QAAQ,IAAEA,QAAQ,CAACE,IAAT,EAA1G,CAAZ;AACA,WAAO;AAACd,MAAAA,GAAG,EAACe,UAAU,CAAChB,GAAG,CAACiB,QAAL,CAAf;AAA+Bf,MAAAA,GAAG,EAACc,UAAU,CAAChB,GAAG,CAACkB,SAAL;AAA7C,KAAP;AACD;;AAEDC,EAAAA,eAAe,GACf;AACE,QAAIC,WAAW,GAAG,IAAlB,CADF,CAGE;;AACA,QAAIC,SAAS,CAACC,WAAd,EACA;AACEF,MAAAA,WAAW,GAAGC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AACxEhB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,GAAjB;AACA,eAAO;AACLC,UAAAA,GAAG,EAAEuB,QAAQ,CAACC,MAAT,CAAgBR,QADhB;AAELf,UAAAA,GAAG,EAAEsB,QAAQ,CAACC,MAAT,CAAgBP;AAFhB,SAAP;AAID,OANa,EAMX,YAAW;AACZ,eAAO,IAAP;AACD,OARa,CAAd;AASD;;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAYW,WAAZ;AACA,WAAOA,WAAP;AACD;;AAED,QAAMM,SAAN,CAAgB1B,GAAhB,EACA;AACE,QAAI2B,GAAG,GAAG,qBAAoB3B,GAAG,CAACC,GAAxB,GAA6B,OAA7B,GAAqCD,GAAG,CAACE,GAAnD;AACA,QAAIC,MAAM,GAAG,MAAMQ,KAAK,CAACgB,GAAD,CAAL,CAAWf,IAAX,CAAgBC,QAAQ,IAAEA,QAAQ,CAACE,IAAT,EAA1B,CAAnB;AACA,WAAOZ,MAAM,CAACA,MAAd;AACD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,GAAG,EAAE,KAAK7B,KAAL,CAAWC,GAArB;AAA0B,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWI,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA9DyB;;AAiE5B,eAAeP,GAAf","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      pos:{lat:4.603843, lng: -74.062705},\n      stores:{}\n    }\n  }\n\n  componentDidMount()\n  {\n    this.setState({pos:this.getPosition()})\n    this.setState({stores:this.getPosition()})\n  }\n\n  componentDidUpdate()\n  {\n    console.log(this.state.pos)\n    console.log(this.state.stores)\n  }\n\n  async getPosition()\n  {\n    let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n    pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    return {lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}\n  }\n\n  getUserPosition()\n  {\n    let coordinates = null\n\n    //Updated from browser\n    if (navigator.geolocation) \n    {\n      coordinates = navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(this.pos)\n        return({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        })\n      }, function() {\n        return null\n      })\n    }\n    console.log(coordinates)\n    return coordinates\n  }\n\n  async getStores(pos)\n  {\n    let url = '/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let stores = await fetch(url).then(response=>response.json())\n    return stores.stores\n  }\n  \n  render() {\n    return (\n      <div>\n        <Map pos={this.state.pos} stores={this.state.stores}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}