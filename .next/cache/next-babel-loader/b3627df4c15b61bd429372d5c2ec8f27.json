{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.pos = this.initialPosition();\n      this.userPos = this.getUserPosition();\n      this.stores = this.getStores(this.pos);\n    }\n  }, {\n    key: \"initialPosition\",\n    value: function initialPosition() {\n      var pos, ip;\n      return _regeneratorRuntime.async(function initialPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pos = {\n                lat: 4.603843,\n                lng: -74.062705\n              };\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://api.ipify.org').then(function (response) {\n                return response.text();\n              }));\n\n            case 3:\n              ip = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(function (response) {\n                return response.json();\n              }));\n\n            case 6:\n              pos = _context.sent;\n              return _context.abrupt(\"return\", {\n                lat: parseFloat(pos.latitude),\n                lng: parseFloat(pos.longitude)\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getUserPosition\",\n    value: function getUserPosition() {\n      var coordinates = null; //Updated from browser\n\n      if (navigator.geolocation) {\n        coordinates = navigator.geolocation.getCurrentPosition(function (position) {\n          console.log(this.pos);\n          return {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n        }, function () {\n          return null;\n        });\n      }\n\n      console.log(coordinates);\n      return coordinates;\n    }\n  }, {\n    key: \"getStores\",\n    value: function getStores(pos) {\n      var url, stores;\n      return _regeneratorRuntime.async(function getStores$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = 'https://front-iota.now.sh/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              stores = _context2.sent;\n              return _context2.abrupt(\"return\", stores.stores);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        pos: this.pos,\n        userPos: this.userPos,\n        stores: this.stores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","App","pos","initialPosition","userPos","getUserPosition","stores","getStores","lat","lng","fetch","then","response","text","ip","json","parseFloat","latitude","longitude","coordinates","navigator","geolocation","getCurrentPosition","position","console","log","coords","url"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;IAEMC,G;;;;;;;;;;;;;wCAEJ;AACE,WAAKC,GAAL,GAAS,KAAKC,eAAL,EAAT;AACA,WAAKC,OAAL,GAAa,KAAKC,eAAL,EAAb;AACA,WAAKC,MAAL,GAAc,KAAKC,SAAL,CAAe,KAAKL,GAApB,CAAd;AACD;;;;;;;;;AAIKA,cAAAA,G,GAAM;AAACM,gBAAAA,GAAG,EAAC,QAAL;AAAgBC,gBAAAA,GAAG,EAAE,CAAC;AAAtB,e;;+CACKC,KAAK,CAAC,uBAAD,CAAL,CAA+BC,IAA/B,CAAoC,UAAAC,QAAQ;AAAA,uBAAEA,QAAQ,CAACC,IAAT,EAAF;AAAA,eAA5C,C;;;AAAXC,cAAAA,E;;+CACQJ,KAAK,CAAC,mFAAiFI,EAAlF,CAAL,CAA2FH,IAA3F,CAAgG,UAAAC,QAAQ;AAAA,uBAAEA,QAAQ,CAACG,IAAT,EAAF;AAAA,eAAxG,C;;;AAAZb,cAAAA,G;+CACO;AAACM,gBAAAA,GAAG,EAACQ,UAAU,CAACd,GAAG,CAACe,QAAL,CAAf;AAA+BR,gBAAAA,GAAG,EAACO,UAAU,CAACd,GAAG,CAACgB,SAAL;AAA7C,e;;;;;;;;;;;sCAIT;AACE,UAAIC,WAAW,GAAG,IAAlB,CADF,CAGE;;AACA,UAAIC,SAAS,CAACC,WAAd,EACA;AACEF,QAAAA,WAAW,GAAGC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AACxEC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,GAAjB;AACA,iBAAO;AACLM,YAAAA,GAAG,EAAEe,QAAQ,CAACG,MAAT,CAAgBT,QADhB;AAELR,YAAAA,GAAG,EAAEc,QAAQ,CAACG,MAAT,CAAgBR;AAFhB,WAAP;AAID,SANa,EAMX,YAAW;AACZ,iBAAO,IAAP;AACD,SARa,CAAd;AASD;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,aAAOA,WAAP;AACD;;;8BAEejB,G;;;;;;AAEVyB,cAAAA,G,GAAM,8CAA6CzB,GAAG,CAACM,GAAjD,GAAsD,OAAtD,GAA8DN,GAAG,CAACO,G;;+CACzDC,KAAK,CAACiB,GAAD,CAAL,CAAWhB,IAAX,CAAgB,UAAAC,QAAQ;AAAA,uBAAEA,QAAQ,CAACG,IAAT,EAAF;AAAA,eAAxB,C;;;AAAfT,cAAAA,M;gDACGA,MAAM,CAACA,M;;;;;;;;;;;6BAGP;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAE,KAAKJ,GAAf;AAAoB,QAAA,OAAO,EAAE,KAAKE,OAAlC;AAA2C,QAAA,MAAM,EAAE,KAAKE,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAlDeR,S;;AAqDlB,eAAeG,GAAf","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nclass App extends Component {\n  componentDidMount() \n  {\n    this.pos=this.initialPosition()\n    this.userPos=this.getUserPosition()\n    this.stores = this.getStores(this.pos)\n  }\n\n  async initialPosition()\n  {\n    let pos = {lat:4.603843 , lng: -74.062705}\n    let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n    pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    return {lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}\n  }\n\n  getUserPosition()\n  {\n    let coordinates = null\n\n    //Updated from browser\n    if (navigator.geolocation) \n    {\n      coordinates = navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(this.pos)\n        return({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        })\n      }, function() {\n        return null\n      })\n    }\n    console.log(coordinates)\n    return coordinates\n  }\n\n  async getStores(pos)\n  {\n    let url = 'https://front-iota.now.sh/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let stores = await fetch(url).then(response=>response.json())\n    return stores.stores\n  }\n  \n  render() {\n    return (\n      <div>\n        <Map pos={this.pos} userPos={this.userPos} stores={this.stores}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}