{"ast":null,"code":"\"use strict\";\n\nvar _middleware = require(\"././middleware\");\n\n// The main, exported, function of the endpoint,\n// dealing with the request and subsequent response\nmodule.exports = async (req, res) => {\n  // Get a database connection, cached or otherwise,\n  // using the connection string environment variable as the argument\n  const db = await _middleware.middleware.connectToDatabase(); // Select the \"stores\" collection from the database\n\n  const collection = await db.collection('stores'); // Select the stores collection from the database\n\n  const stores = await collection.find({}).toArray(); // Respond with a JSON string of all stores in the collection\n\n  res.status(200).json({\n    stores\n  });\n};","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/api/stores.js"],"names":["module","exports","req","res","db","middleware","connectToDatabase","collection","stores","find","toArray","status","json"],"mappings":";;AAAA;;AAEA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC;AACA;AACA,QAAMC,EAAE,GAAG,MAAMC,uBAAWC,iBAAX,EAAjB,CAHmC,CAKnC;;AACA,QAAMC,UAAU,GAAG,MAAMH,EAAE,CAACG,UAAH,CAAc,QAAd,CAAzB,CANmC,CAQnC;;AACA,QAAMC,MAAM,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoBC,OAApB,EAArB,CATmC,CAWnC;;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,IAAAA;AAAF,GAArB;AACD,CAbD","sourcesContent":["import {middleware} from \"././middleware\";\n\n// The main, exported, function of the endpoint,\n// dealing with the request and subsequent response\nmodule.exports = async (req, res) => {\n  // Get a database connection, cached or otherwise,\n  // using the connection string environment variable as the argument\n  const db = await middleware.connectToDatabase()\n\n  // Select the \"stores\" collection from the database\n  const collection = await db.collection('stores')\n\n  // Select the stores collection from the database\n  const stores = await collection.find({}).toArray()\n\n  // Respond with a JSON string of all stores in the collection\n  res.status(200).json({ stores })\n}"]},"metadata":{},"sourceType":"script"}