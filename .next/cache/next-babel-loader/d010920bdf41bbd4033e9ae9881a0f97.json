{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/ContextProvider.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from 'react';\nimport Context from \"./Context\";\nimport createAuth0Client from '@auth0/auth0-spa-js'; // create a provider\n\nclass ContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initialLocation\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n      }), err => async function () {\n        let ip = await fetch(process.env.IPIFY_URL).then(response => response.text());\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(response => response.json());\n        let loc = {\n          lat: parseFloat(pos.latitude),\n          lng: parseFloat(pos.longitude)\n        };\n        this.setState({\n          location: loc\n        }); //localStorage.setItem('_location', JSON.stringify(loc))\n      });\n    });\n\n    _defineProperty(this, \"initializeAuth0\", async () => {\n      const config = {\n        domain: 'acacerca.auth0.com',\n        //process.env.AUTH0_DOMAIN,\n        client_id: 'd8Pv88MjaYWNSUKUHnO9JcudrUPZ6THl',\n        //process.env.AUTH0_CLIENT_ID,\n        redirect_uri: window.location.origin,\n        cacheLocation: 'localstorage'\n      };\n      const auth0Client = await createAuth0Client(config);\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      this.setState({\n        authClient: auth0Client,\n        isAuthenticated,\n        user\n      });\n    });\n\n    this.state = {\n      location: null,\n      featuredStores: null,\n      stores: null,\n      authClient: null,\n      isAuthenticated: false,\n      user: null,\n      isReady: false\n    };\n    this.startedAt = new Date();\n  }\n\n  componentDidMount() {\n    this.initialLocation();\n    this.initializeAuth0();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.location != null && prevState.location != this.state.location) {\n      this.featuredStores(this.state.location.lat, this.state.location.lng);\n      this.stores(this.state.location.lat, this.state.location.lng);\n      this.addressFromIp(this.state.location.lat, this.state.location.lng);\n    }\n\n    if (!this.state.isReady && this.state.location != null && this.state.stores != null && this.state.featuredStores != null && this.state.authClient != null) {\n      let now = new Date();\n      let towait = 2000 - (now.getTime() - this.startedAt.getTime());\n\n      if (towait > 0) {\n        setTimeout(() => {\n          this.setState({\n            isReady: true\n          });\n        }, towait);\n      } else {\n        this.setState({\n          isReady: true\n        });\n      }\n    }\n  }\n\n  updateLocation(newLat, newLng) {\n    this.setState({\n      location: {\n        lat: parseFloat(newLat),\n        lng: parseFloat(newLng)\n      }\n    });\n    localStorage.setItem('_selectedLocationLat', newLat);\n  }\n\n  async featuredStores(lat, lng) {\n    let url = '/api/featuredStores?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      featuredStores: res.stores\n    }); //localStorage.setItem('_featuredStores', JSON.stringify(res.stores))  \n  }\n\n  async stores(lat, lng) {\n    let url = '/api/stores?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      stores: res.stores\n    }); //localStorage.setItem('_stores', JSON.stringify(res.stores))  \n  }\n\n  render() {\n    const {\n      location,\n      featuredStores,\n      stores,\n      authClient,\n      isAuthenticated,\n      user,\n      isReady\n    } = this.state;\n    const values = {\n      location,\n      featuredStores,\n      stores,\n      isAuthenticated,\n      user,\n      isReady,\n      loginWithRedirect: (...p) => authClient.loginWithRedirect(...p),\n      getTokenSilently: (...p) => authClient.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => authClient.getIdTokenClaims(...p),\n      logout: (...p) => authClient.logout(...p)\n    };\n    return __jsx(Context.Provider, {\n      value: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default ContextProvider;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/ContextProvider.js"],"names":["React","Component","createContext","Context","createAuth0Client","ContextProvider","constructor","props","navigator","geolocation","getCurrentPosition","position","setState","location","lat","coords","latitude","lng","longitude","err","ip","fetch","process","env","IPIFY_URL","then","response","text","pos","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","loc","parseFloat","config","domain","client_id","redirect_uri","window","origin","cacheLocation","auth0Client","isAuthenticated","user","getUser","authClient","state","featuredStores","stores","isReady","startedAt","Date","componentDidMount","initialLocation","initializeAuth0","componentDidUpdate","prevProps","prevState","addressFromIp","now","towait","getTime","setTimeout","updateLocation","newLat","newLng","localStorage","setItem","url","res","render","values","loginWithRedirect","p","getTokenSilently","getIdTokenClaims","logout","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;AACA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAEtCK,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,6CAuDkB,YAAY;AAC5B,YAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACJC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AACtBC,QAAAA,QAAQ,EAAC;AACPC,UAAAA,GAAG,EAACH,QAAQ,CAACI,MAAT,CAAgBC,QADb;AAEPC,UAAAA,GAAG,EAACN,QAAQ,CAACI,MAAT,CAAgBG;AAFb;AADa,OAAd,CADR,EASJC,GAAG,IAAI,kBACP;AACE,YAAIC,EAAE,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,SAAb,CAAL,CAA6BC,IAA7B,CAAkCC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA5C,CAAf;AACA,YAAIC,GAAG,GAAG,MAAMP,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYM,qBAAZ,GAAmC,gBAAnC,GAAoDP,OAAO,CAACC,GAAR,CAAYO,qBAAhE,GAAsF,MAAtF,GAA6FV,EAA9F,CAAL,CAAuGK,IAAvG,CAA4GC,QAAQ,IAAEA,QAAQ,CAACK,IAAT,EAAtH,CAAhB;AACA,YAAIC,GAAG,GAAG;AACRlB,UAAAA,GAAG,EAACmB,UAAU,CAACL,GAAG,CAACZ,QAAL,CADN;AAERC,UAAAA,GAAG,EAACgB,UAAU,CAACL,GAAG,CAACV,SAAL;AAFN,SAAV;AAKA,aAAKN,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAACmB;AADG,SAAd,EARF,CAYE;AACD,OAvBG,CAAN;AAyBD,KAjFD;;AAAA,6CA+FkB,YAAY;AAC5B,YAAME,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,oBADK;AACgB;AAC7BC,QAAAA,SAAS,EAAE,kCAFE;AAEiC;AAC9CC,QAAAA,YAAY,EAAEC,MAAM,CAACzB,QAAP,CAAgB0B,MAHjB;AAIbC,QAAAA,aAAa,EAAE;AAJF,OAAf;AAOA,YAAMC,WAAW,GAAG,MAAMrC,iBAAiB,CAAC8B,MAAD,CAA3C;AACA,YAAMQ,eAAe,GAAG,MAAMD,WAAW,CAACC,eAAZ,EAA9B;AACA,YAAMC,IAAI,GAAGD,eAAe,GAAG,MAAMD,WAAW,CAACG,OAAZ,EAAT,GAAiC,IAA7D;AAEA,WAAKhC,QAAL,CAAc;AAAEiC,QAAAA,UAAU,EAACJ,WAAb;AAA0BC,QAAAA,eAA1B;AAA2CC,QAAAA;AAA3C,OAAd;AACD,KA5GD;;AAEE,SAAMG,KAAN,GAAc;AACZjC,MAAAA,QAAQ,EAAC,IADG;AAGZkC,MAAAA,cAAc,EAAC,IAHH;AAIZC,MAAAA,MAAM,EAAC,IAJK;AAMZH,MAAAA,UAAU,EAAE,IANA;AAOZH,MAAAA,eAAe,EAAE,KAPL;AAQZC,MAAAA,IAAI,EAAC,IARO;AAUZM,MAAAA,OAAO,EAAC;AAVI,KAAd;AAaA,SAAKC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,eAAL;AACA,SAAKC,eAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAG,KAAKX,KAAL,CAAWjC,QAAX,IAAuB,IAAvB,IACG4C,SAAS,CAAC5C,QAAV,IAAsB,KAAKiC,KAAL,CAAWjC,QADvC,EAEA;AACE,WAAKkC,cAAL,CAAoB,KAAKD,KAAL,CAAWjC,QAAX,CAAoBC,GAAxC,EAA6C,KAAKgC,KAAL,CAAWjC,QAAX,CAAoBI,GAAjE;AACA,WAAK+B,MAAL,CAAY,KAAKF,KAAL,CAAWjC,QAAX,CAAoBC,GAAhC,EAAqC,KAAKgC,KAAL,CAAWjC,QAAX,CAAoBI,GAAzD;AACA,WAAKyC,aAAL,CAAmB,KAAKZ,KAAL,CAAWjC,QAAX,CAAoBC,GAAvC,EAA4C,KAAKgC,KAAL,CAAWjC,QAAX,CAAoBI,GAAhE;AACD;;AAED,QACI,CAAC,KAAK6B,KAAL,CAAWG,OAAZ,IACG,KAAKH,KAAL,CAAWjC,QAAX,IAAsB,IADzB,IAEG,KAAKiC,KAAL,CAAWE,MAAX,IAAqB,IAFxB,IAGG,KAAKF,KAAL,CAAWC,cAAX,IAA6B,IAHhC,IAIG,KAAKD,KAAL,CAAWD,UAAX,IAAuB,IAL9B,EAMA;AACE,UAAIc,GAAG,GAAG,IAAIR,IAAJ,EAAV;AACA,UAAIS,MAAM,GAAG,QAAQD,GAAG,CAACE,OAAJ,KAAgB,KAAKX,SAAL,CAAeW,OAAf,EAAxB,CAAb;;AAEA,UAAGD,MAAM,GAAC,CAAV,EACA;AACEE,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKlD,QAAL,CAAc;AAAEqC,YAAAA,OAAO,EAAC;AAAV,WAAd;AACD,SAFS,EAEPW,MAFO,CAAV;AAGD,OALD,MAOA;AACE,aAAKhD,QAAL,CAAc;AAAEqC,UAAAA,OAAO,EAAC;AAAV,SAAd;AACD;AACF;AACF;;AA8BDc,EAAAA,cAAc,CAACC,MAAD,EAASC,MAAT,EACd;AACE,SAAKrD,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAC;AACPC,QAAAA,GAAG,EAACmB,UAAU,CAAC+B,MAAD,CADP;AAEP/C,QAAAA,GAAG,EAACgB,UAAU,CAACgC,MAAD;AAFP;AADG,KAAd;AAOAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,sBAArB,EAA6CH,MAA7C;AACD;;AAiBD,QAAMjB,cAAN,CAAqBjC,GAArB,EAA0BG,GAA1B,EACA;AACE,QAAImD,GAAG,GAAG,6BAA4BtD,GAA5B,GAAiC,OAAjC,GAAyCG,GAAnD;AACA,QAAIoD,GAAG,GAAG,MAAMhD,KAAK,CAAC+C,GAAD,CAAL,CAAW3C,IAAX,CAAgBC,QAAQ,IAAEA,QAAQ,CAACK,IAAT,EAA1B,CAAhB;AAEA,SAAKnB,QAAL,CAAc;AAAEmC,MAAAA,cAAc,EAACsB,GAAG,CAACrB;AAArB,KAAd,EAJF,CAKE;AACD;;AAED,QAAMA,MAAN,CAAalC,GAAb,EAAkBG,GAAlB,EACA;AACE,QAAImD,GAAG,GAAG,qBAAoBtD,GAApB,GAAyB,OAAzB,GAAiCG,GAA3C;AACA,QAAIoD,GAAG,GAAG,MAAMhD,KAAK,CAAC+C,GAAD,CAAL,CAAW3C,IAAX,CAAgBC,QAAQ,IAAEA,QAAQ,CAACK,IAAT,EAA1B,CAAhB;AAEA,SAAKnB,QAAL,CAAc;AAAEoC,MAAAA,MAAM,EAACqB,GAAG,CAACrB;AAAb,KAAd,EAJF,CAKE;AACD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJzD,MAAAA,QADI;AAEJkC,MAAAA,cAFI;AAGJC,MAAAA,MAHI;AAKJH,MAAAA,UALI;AAMJH,MAAAA,eANI;AAOJC,MAAAA,IAPI;AASJM,MAAAA;AATI,QAUF,KAAKH,KAVT;AAYA,UAAMyB,MAAM,GAAG;AACb1D,MAAAA,QADa;AAEbkC,MAAAA,cAFa;AAGbC,MAAAA,MAHa;AAKbN,MAAAA,eALa;AAMbC,MAAAA,IANa;AAQbM,MAAAA,OARa;AAUbuB,MAAAA,iBAAiB,EAAE,CAAC,GAAGC,CAAJ,KAAU5B,UAAU,CAAC2B,iBAAX,CAA6B,GAAGC,CAAhC,CAVhB;AAWbC,MAAAA,gBAAgB,EAAE,CAAC,GAAGD,CAAJ,KAAU5B,UAAU,CAAC6B,gBAAX,CAA4B,GAAGD,CAA/B,CAXf;AAYbE,MAAAA,gBAAgB,EAAE,CAAC,GAAGF,CAAJ,KAAU5B,UAAU,CAAC8B,gBAAX,CAA4B,GAAGF,CAA/B,CAZf;AAabG,MAAAA,MAAM,EAAE,CAAC,GAAGH,CAAJ,KAAU5B,UAAU,CAAC+B,MAAX,CAAkB,GAAGH,CAArB;AAbL,KAAf;AAgBA,WAAQ,MAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAEF,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKhE,KAAL,CAAWsE,QAA7C,CAAR;AACD;;AAjKqC;;AAoKxC,eAAexE,eAAf","sourcesContent":["import React, { Component, createContext } from 'react';\n\nimport Context from \"./Context\"\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n// create a provider\nclass ContextProvider extends Component {\n   \n  constructor(props)\n  {\n    super(props)\n    this. state = {\n      location:null,\n\n      featuredStores:null,\n      stores:null,\n\n      authClient: null,\n      isAuthenticated: false,\n      user:null,\n\n      isReady:false\n    }\n    \n    this.startedAt = new Date()\n  }\n\n  componentDidMount() {\n    this.initialLocation()\n    this.initializeAuth0()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.location != null  \n      && (prevState.location != this.state.location))\n    {\n      this.featuredStores(this.state.location.lat, this.state.location.lng)\n      this.stores(this.state.location.lat, this.state.location.lng)\n      this.addressFromIp(this.state.location.lat, this.state.location.lng)\n    }\n\n    if(\n        !this.state.isReady \n        && this.state.location !=null\n        && this.state.stores != null\n        && this.state.featuredStores != null\n        && this.state.authClient!=null)\n    {\n      let now = new Date()\n      let towait = 2000 - (now.getTime() - this.startedAt.getTime())\n      \n      if(towait>0)\n      {\n        setTimeout(() => {\n          this.setState({ isReady:true })\n        }, towait)\n      }\n      else\n      {\n        this.setState({ isReady:true })\n      }\n    }\n  }\n  \n  initialLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ \n          location:{\n            lat:position.coords.latitude, \n            lng:position.coords.longitude\n          }\n        })\n\n        , \n      err => async function()\n      {\n        let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n        let loc = {\n          lat:parseFloat(pos.latitude),\n          lng:parseFloat(pos.longitude)\n        }\n\n        this.setState({ \n          location:loc\n        })\n\n        //localStorage.setItem('_location', JSON.stringify(loc))\n      }\n    )\n  }\n\n  updateLocation(newLat, newLng)\n  {\n    this.setState({ \n      location:{\n        lat:parseFloat(newLat), \n        lng:parseFloat(newLng)\n      }\n    })\n\n    localStorage.setItem('_selectedLocationLat', newLat)  \n  }\n\n  initializeAuth0 = async () => {\n    const config = {\n      domain: 'acacerca.auth0.com',//process.env.AUTH0_DOMAIN,\n      client_id: 'd8Pv88MjaYWNSUKUHnO9JcudrUPZ6THl',//process.env.AUTH0_CLIENT_ID,\n      redirect_uri: window.location.origin,\n      cacheLocation: 'localstorage'\n    }\n\n    const auth0Client = await createAuth0Client(config)\n    const isAuthenticated = await auth0Client.isAuthenticated()\n    const user = isAuthenticated ? await auth0Client.getUser() : null\n\n    this.setState({ authClient:auth0Client, isAuthenticated, user })\n  };\n\n  async featuredStores(lat, lng)\n  {\n    let url = '/api/featuredStores?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ featuredStores:res.stores })\n    //localStorage.setItem('_featuredStores', JSON.stringify(res.stores))  \n  }\n\n  async stores(lat, lng)\n  {\n    let url = '/api/stores?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ stores:res.stores })\n    //localStorage.setItem('_stores', JSON.stringify(res.stores))  \n  }\n\n  render() {\n    const { \n      location,\n      featuredStores,\n      stores,\n\n      authClient,\n      isAuthenticated,\n      user,\n\n      isReady\n    } = this.state;\n\n    const values = { \n      location,\n      featuredStores,\n      stores,\n\n      isAuthenticated,\n      user,\n\n      isReady,\n\n      loginWithRedirect: (...p) => authClient.loginWithRedirect(...p),\n      getTokenSilently: (...p) => authClient.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => authClient.getIdTokenClaims(...p),\n      logout: (...p) => authClient.logout(...p)\n    }\n  \n    return (<Context.Provider value={values}>{this.props.children}</Context.Provider>);\n  }\n}\n\nexport default ContextProvider"]},"metadata":{},"sourceType":"module"}