{"ast":null,"code":"// Import Dependencies\nconst url = require('url');\n\nconst MongoClient = require('mongodb').MongoClient; // Create cached connection variable\n\n\nlet cachedDb = null;\nlet uri = process.env.MONGODB_URI; // A function for connecting to MongoDB,\n// taking a single parameter of the connection string\n\nasync function connectToDatabase() {\n  // If the database connection is cached,\n  // use it instead of creating a new connection\n  if (cachedDb) {\n    return cachedDb;\n  } // If no connection is cached, create a new one\n\n\n  const client = await MongoClient.connect(uri, {\n    useNewUrlParser: true\n  }); // Select the database through the connection,\n  // using the database path of the connection string\n\n  const db = await client.db(url.parse(uri).pathname.substr(1)); // Cache the database connection and return the connection\n\n  cachedDb = db;\n  return db;\n}\n\nconst db = connectToDatabase(uri);\nexport default db;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/middleware/mongodb.js"],"names":["url","require","MongoClient","cachedDb","uri","process","env","MONGODB_URI","connectToDatabase","client","connect","useNewUrlParser","db","parse","pathname","substr"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBC,WAAvC,C,CAEA;;;AACA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAtB,C,CAEA;AACA;;AACA,eAAeC,iBAAf,GAAmC;AACjC;AACA;AACA,MAAIL,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD,GALgC,CAOjC;;;AACA,QAAMM,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBN,GAApB,EAAyB;AAAEO,IAAAA,eAAe,EAAE;AAAnB,GAAzB,CAArB,CARiC,CAUjC;AACA;;AACA,QAAMC,EAAE,GAAG,MAAMH,MAAM,CAACG,EAAP,CAAUZ,GAAG,CAACa,KAAJ,CAAUT,GAAV,EAAeU,QAAf,CAAwBC,MAAxB,CAA+B,CAA/B,CAAV,CAAjB,CAZiC,CAcjC;;AACAZ,EAAAA,QAAQ,GAAGS,EAAX;AACA,SAAOA,EAAP;AACD;;AAED,MAAMA,EAAE,GAAGJ,iBAAiB,CAACJ,GAAD,CAA5B;AAEA,eAAeQ,EAAf","sourcesContent":["// Import Dependencies\nconst url = require('url')\nconst MongoClient = require('mongodb').MongoClient\n\n// Create cached connection variable\nlet cachedDb = null\nlet uri = process.env.MONGODB_URI\n\n// A function for connecting to MongoDB,\n// taking a single parameter of the connection string\nasync function connectToDatabase() {\n  // If the database connection is cached,\n  // use it instead of creating a new connection\n  if (cachedDb) {\n    return cachedDb\n  }\n\n  // If no connection is cached, create a new one\n  const client = await MongoClient.connect(uri, { useNewUrlParser: true })\n\n  // Select the database through the connection,\n  // using the database path of the connection string\n  const db = await client.db(url.parse(uri).pathname.substr(1))\n\n  // Cache the database connection and return the connection\n  cachedDb = db\n  return db\n}\n\nconst db = connectToDatabase(uri);\n\nexport default db;"]},"metadata":{},"sourceType":"module"}