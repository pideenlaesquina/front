{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\nvar posFromBrowser = null;\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pos: null,\n      stores: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPosition();\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      var ip, pos, posFromIp, fromBrowser;\n      return _regeneratorRuntime.async(function getPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://api.ipify.org').then(function (response) {\n                return response.text();\n              }));\n\n            case 2:\n              ip = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(function (response) {\n                return response.json();\n              }));\n\n            case 5:\n              pos = _context.sent;\n              posFromIp = {\n                lat: parseFloat(pos.latitude),\n                lng: parseFloat(pos.longitude)\n              };\n\n              if (navigator.geolocation) {\n                fromBrowser = navigator.geolocation.getCurrentPosition(function (position) {\n                  posFromBrowser = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                  };\n                  console.log(posFromBrowser);\n                  this.setState({\n                    pos: pos\n                  });\n                }, function () {});\n              } else {\n                this.setState({\n                  pos: posFromIp\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getUserPosition\",\n    value: function getUserPosition() {\n      var coordinates = null; //Updated from browser\n\n      if (navigator.geolocation) {\n        coordinates = navigator.geolocation.getCurrentPosition(function (position) {\n          console.log(this.pos);\n          return {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n        }, function () {\n          return null;\n        });\n      }\n\n      console.log(coordinates);\n      return coordinates;\n    }\n  }, {\n    key: \"getStores\",\n    value: function getStores(pos) {\n      var url, stores;\n      return _regeneratorRuntime.async(function getStores$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = '/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              stores = _context2.sent;\n              return _context2.abrupt(\"return\", stores.stores);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        pos: this.state.pos,\n        stores: this.state.stores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","posFromBrowser","App","props","state","pos","stores","getPosition","fetch","then","response","text","ip","json","posFromIp","lat","parseFloat","latitude","lng","longitude","navigator","geolocation","fromBrowser","getCurrentPosition","position","coords","console","log","setState","coordinates","url"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nvar posFromBrowser=null;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      pos:null,\n      stores:[]\n    }\n  }\n\n  componentDidMount() {\n    this.getPosition()\n  }\n\n  async getPosition()\n  {\n    let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n    let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    \n    let posFromIp = {lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}\n\n    if (navigator.geolocation) \n    {\n      let fromBrowser = navigator.geolocation.getCurrentPosition(\n        function(position) {\n          posFromBrowser = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n          console.log(posFromBrowser)\n          this.setState({ pos: pos })\n        }, \n        function() {}\n      )\n    }\n    else\n    {\n      this.setState({ pos: posFromIp })\n    }\n  }\n\n  getUserPosition()\n  {\n    let coordinates = null\n\n    //Updated from browser\n    if (navigator.geolocation) \n    {\n      coordinates = navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(this.pos)\n        return({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        })\n      }, function() {\n        return null\n      })\n    }\n    console.log(coordinates)\n    return coordinates\n  }\n\n  async getStores(pos)\n  {\n    let url = '/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let stores = await fetch(url).then(response=>response.json())\n    return stores.stores\n  }\n  \n  render() {\n    return (\n      <div>\n        <Map pos={this.state.pos} stores={this.state.stores}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}