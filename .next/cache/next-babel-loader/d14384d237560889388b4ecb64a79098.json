{"ast":null,"code":"\"use strict\";\n\nvar _mongodb = _interopRequireDefault(require(\"../../middleware/mongodb.js\"));\n\nvar _isomorphicUnfetch = _interopRequireDefault(require(\"isomorphic-unfetch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The main, exported, function of the endpoint,\n// dealing with the request and subsequent response\nmodule.exports = async (req, res) => {\n  // Get a database connection, cached or otherwise,\n  // using the connection string environment variable as the argument\n  const db = await (0, _mongodb.default)(); // Select the \"stores\" collection from the database\n\n  const collection = await db.collection('stores'); // Select the stores collection from the database\n\n  const stores = await collection.find({\n    $or: [{\n      lat: \"\"\n    }, {\n      lng: \"\"\n    }]\n  }).toArray();\n\n  for (let index = 0; index < stores.length; index++) {\n    const element = stores[index];\n    let address = element.address.replace(\" \", \"+\"); //     console.log(address)\n  } //   stores.forEach(element => {\n  //     let address = element.address.replace(\" \", \"+\")\n  //     console.log(address)\n  //     let url = process.env.GOOGLE_MAPS_API_URL + \"?address=\"+address+\"&key=\"+process.env.GOOGLE_MAPS_API_KEY\n  //     console.log(url)\n  //     let res = await fetch(url)\n  //     let location = await res.json()\n  //     console.log(location)\n  //   });\n  // Respond with a JSON string of all stores in the collection\n\n\n  res.status(200).json({\n    stores\n  });\n};","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/api/addresses.js"],"names":["module","exports","req","res","db","collection","stores","find","$or","lat","lng","toArray","index","length","element","address","replace","status","json"],"mappings":";;AAAA;;AACA;;;;AAEA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC;AACA;AACA,QAAMC,EAAE,GAAG,MAAM,uBAAjB,CAHmC,CAKnC;;AACA,QAAMC,UAAU,GAAG,MAAMD,EAAE,CAACC,UAAH,CAAc,QAAd,CAAzB,CANmC,CAQnC;;AACA,QAAMC,MAAM,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB;AAAEC,IAAAA,GAAG,EAAC,CAAC;AAACC,MAAAA,GAAG,EAAC;AAAL,KAAD,EAAW;AAACC,MAAAA,GAAG,EAAC;AAAL,KAAX;AAAN,GAAhB,EAA8CC,OAA9C,EAArB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,MAAM,CAACO,MAAnC,EAA2CD,KAAK,EAAhD,EAAoD;AAChD,UAAME,OAAO,GAAGR,MAAM,CAACM,KAAD,CAAtB;AACA,QAAIG,OAAO,GAAGD,OAAO,CAACC,OAAR,CAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,GAA7B,CAAd,CAFgD,CAGtD;AAGG,GAjBkC,CAkBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;;AACAb,EAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEZ,IAAAA;AAAF,GAArB;AACD,CA9BD","sourcesContent":["import Database from '../../middleware/mongodb.js'\nimport fetch from 'isomorphic-unfetch'\n\n// The main, exported, function of the endpoint,\n// dealing with the request and subsequent response\nmodule.exports = async (req, res) => {\n  // Get a database connection, cached or otherwise,\n  // using the connection string environment variable as the argument\n  const db = await Database()\n\n  // Select the \"stores\" collection from the database\n  const collection = await db.collection('stores')\n\n  // Select the stores collection from the database\n  const stores = await collection.find({ $or:[{lat:\"\"}, {lng:\"\"}] }).toArray()\n\n  for (let index = 0; index < stores.length; index++) {\n      const element = stores[index];\n      let address = element.address.replace(\" \", \"+\")\n//     console.log(address)\n\n      \n  }\n//   stores.forEach(element => {\n//     let address = element.address.replace(\" \", \"+\")\n//     console.log(address)\n//     let url = process.env.GOOGLE_MAPS_API_URL + \"?address=\"+address+\"&key=\"+process.env.GOOGLE_MAPS_API_KEY\n//     console.log(url)\n//     let res = await fetch(url)\n//     let location = await res.json()\n//     console.log(location)\n//   });\n\n  // Respond with a JSON string of all stores in the collection\n  res.status(200).json({ stores })\n}"]},"metadata":{},"sourceType":"script"}