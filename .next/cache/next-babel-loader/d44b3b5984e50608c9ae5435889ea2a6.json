{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pos: null,\n      stores: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPosition();\n  }\n\n  async getPosition() {\n    let ip = await fetch('https://api.ipify.org').then(response => response.text());\n    let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(response => response.json());\n    console.log(pos);\n\n    if (navigator.geolocation) {\n      coordinates = navigator.geolocation.getCurrentPosition(function (position) {\n        console.log(this.pos);\n        return {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      }, function () {\n        return null;\n      });\n    }\n\n    console.log(pos);\n    this.setState({\n      pos: {\n        lat: parseFloat(pos.latitude),\n        lng: parseFloat(pos.longitude)\n      }\n    });\n  }\n\n  getUserPosition() {\n    let coordinates = null; //Updated from browser\n\n    if (navigator.geolocation) {\n      coordinates = navigator.geolocation.getCurrentPosition(function (position) {\n        console.log(this.pos);\n        return {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      }, function () {\n        return null;\n      });\n    }\n\n    console.log(coordinates);\n    return coordinates;\n  }\n\n  async getStores(pos) {\n    let url = '/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n    let stores = await fetch(url).then(response => response.json());\n    return stores.stores;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      pos: this.state.pos,\n      stores: this.state.stores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","App","constructor","props","state","pos","stores","componentDidMount","getPosition","ip","fetch","then","response","text","json","console","log","navigator","geolocation","coordinates","getCurrentPosition","position","lat","coords","latitude","lng","longitude","setState","parseFloat","getUserPosition","getStores","url","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      pos:null,\n      stores:[]\n    }\n  }\n\n  componentDidMount() {\n    this.getPosition()\n  }\n\n  async getPosition()\n  {\n    let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n    let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    console.log(pos)\n    if (navigator.geolocation) \n    {\n      coordinates = navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(this.pos)\n        return({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        })\n      }, function() {\n        return null\n      })\n    }\n    console.log(pos)\n    this.setState({ pos:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)} })\n  }\n\n  getUserPosition()\n  {\n    let coordinates = null\n\n    //Updated from browser\n    if (navigator.geolocation) \n    {\n      coordinates = navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(this.pos)\n        return({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        })\n      }, function() {\n        return null\n      })\n    }\n    console.log(coordinates)\n    return coordinates\n  }\n\n  async getStores(pos)\n  {\n    let url = '/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let stores = await fetch(url).then(response=>response.json())\n    return stores.stores\n  }\n  \n  render() {\n    return (\n      <div>\n        <Map pos={this.state.pos} stores={this.state.stores}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}