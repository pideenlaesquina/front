{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/ContextProvider.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from 'react';\nimport Context from \"./Context\";\nimport createAuth0Client from '@auth0/auth0-spa-js'; // create a provider\n\nclass ContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initialLocation\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n      }), err => this.locationFromIp());\n    });\n\n    _defineProperty(this, \"initializeAuth0\", async () => {\n      const config = {\n        domain: 'acacerca.auth0.com',\n        //process.env.AUTH0_DOMAIN,\n        client_id: 'd8Pv88MjaYWNSUKUHnO9JcudrUPZ6THl',\n        //process.env.AUTH0_CLIENT_ID,\n        redirect_uri: window.location.origin,\n        cacheLocation: 'localstorage'\n      };\n      const auth0Client = await createAuth0Client(config);\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      this.setState({\n        authClient: auth0Client,\n        isAuthenticated,\n        user\n      });\n    });\n\n    this.state = {\n      location: null,\n      address: null,\n      featuredStores: null,\n      stores: null,\n      authClient: null,\n      isAuthenticated: false,\n      user: null,\n      isReady: false\n    };\n    this.startedAt = new Date();\n  }\n\n  componentDidMount() {\n    this.initialLocation();\n    this.initializeAuth0();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.location != null && prevState.location != this.state.location) {\n      this.featuredStores(this.state.location.lat, this.state.location.lng);\n      this.stores(this.state.location.lat, this.state.location.lng);\n      this.addressFromIp(this.state.location.lat, this.state.location.lng);\n    }\n\n    if (!this.state.isReady && this.state.location != null && this.state.address != null && this.state.stores != null && this.state.featuredStores != null && this.state.authClient != null) {\n      let now = new Date();\n      let towait = 2000 - (now.getTime() - this.startedAt.getTime());\n\n      if (towait > 0) {\n        setTimeout(() => {\n          this.setState({\n            isReady: true\n          });\n        }, towait);\n      } else {\n        this.setState({\n          isReady: true\n        });\n      }\n    }\n  }\n\n  updateLocation(newLat, newLng) {\n    this.setState({\n      location: {\n        lat: parseFloat(newLat),\n        lng: parseFloat(newLng)\n      }\n    });\n    localStorage.setItem('_selectedLocationLat', newLat);\n  }\n\n  async locationFromIp() {\n    let url = '/api/locationFromIp';\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      location: res.location\n    });\n  }\n\n  async addressFromLocation(lat, lng) {\n    let url = '/api/addressFromLocation?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      address: res.address\n    });\n  }\n\n  async featuredStores(lat, lng) {\n    let url = '/api/featuredStores?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      featuredStores: res.stores\n    }); //localStorage.setItem('_featuredStores', JSON.stringify(res.stores))  \n  }\n\n  async stores(lat, lng) {\n    let url = '/api/stores?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      stores: res.stores\n    }); //localStorage.setItem('_stores', JSON.stringify(res.stores))  \n  }\n\n  render() {\n    const {\n      location,\n      address,\n      featuredStores,\n      stores,\n      authClient,\n      isAuthenticated,\n      user,\n      isReady\n    } = this.state;\n    const values = {\n      location,\n      address,\n      featuredStores,\n      stores,\n      isAuthenticated,\n      user,\n      isReady,\n      loginWithRedirect: (...p) => authClient.loginWithRedirect(...p),\n      getTokenSilently: (...p) => authClient.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => authClient.getIdTokenClaims(...p),\n      logout: (...p) => authClient.logout(...p)\n    };\n    return __jsx(Context.Provider, {\n      value: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default ContextProvider;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/ContextProvider.js"],"names":["React","Component","createContext","Context","createAuth0Client","ContextProvider","constructor","props","navigator","geolocation","getCurrentPosition","position","setState","location","lat","coords","latitude","lng","longitude","err","locationFromIp","config","domain","client_id","redirect_uri","window","origin","cacheLocation","auth0Client","isAuthenticated","user","getUser","authClient","state","address","featuredStores","stores","isReady","startedAt","Date","componentDidMount","initialLocation","initializeAuth0","componentDidUpdate","prevProps","prevState","addressFromIp","now","towait","getTime","setTimeout","updateLocation","newLat","newLng","parseFloat","localStorage","setItem","url","res","fetch","then","response","json","addressFromLocation","render","values","loginWithRedirect","p","getTokenSilently","getIdTokenClaims","logout","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\n\nimport Context from \"./Context\"\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n// create a provider\nclass ContextProvider extends Component {\n   \n  constructor(props)\n  {\n    super(props)\n    this. state = {\n      location:null,\n      address:null,\n\n      featuredStores:null,\n      stores:null,\n\n      authClient: null,\n      isAuthenticated: false,\n      user:null,\n\n      isReady:false\n    }\n    \n    this.startedAt = new Date()\n  }\n\n  componentDidMount() {\n    this.initialLocation()\n    this.initializeAuth0()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.location != null  \n      && (prevState.location != this.state.location))\n    {\n      this.featuredStores(this.state.location.lat, this.state.location.lng)\n      this.stores(this.state.location.lat, this.state.location.lng)\n      this.addressFromIp(this.state.location.lat, this.state.location.lng)\n    }\n\n    if(\n        !this.state.isReady \n        && this.state.location !=null\n        && this.state.address !=null\n        && this.state.stores != null\n        && this.state.featuredStores != null\n        && this.state.authClient!=null)\n    {\n      let now = new Date()\n      let towait = 2000 - (now.getTime() - this.startedAt.getTime())\n      \n      if(towait>0)\n      {\n        setTimeout(() => {\n          this.setState({ isReady:true })\n        }, towait)\n      }\n      else\n      {\n        this.setState({ isReady:true })\n      }\n    }\n  }\n  \n  initialLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ \n        location:{\n          lat:position.coords.latitude, \n          lng:position.coords.longitude\n        }\n      }), \n      err => this.locationFromIp()\n    )\n  }\n\n  updateLocation(newLat, newLng)\n  {\n    this.setState({ \n      location:{\n        lat:parseFloat(newLat), \n        lng:parseFloat(newLng)\n      }\n    })\n\n    localStorage.setItem('_selectedLocationLat', newLat)  \n  }\n\n  initializeAuth0 = async () => {\n    const config = {\n      domain: 'acacerca.auth0.com',//process.env.AUTH0_DOMAIN,\n      client_id: 'd8Pv88MjaYWNSUKUHnO9JcudrUPZ6THl',//process.env.AUTH0_CLIENT_ID,\n      redirect_uri: window.location.origin,\n      cacheLocation: 'localstorage'\n    }\n\n    const auth0Client = await createAuth0Client(config)\n    const isAuthenticated = await auth0Client.isAuthenticated()\n    const user = isAuthenticated ? await auth0Client.getUser() : null\n\n    this.setState({ authClient:auth0Client, isAuthenticated, user })\n  }\n\n  async locationFromIp()\n  {\n    let url = '/api/locationFromIp'\n    let res = await fetch(url).then(response=>response.json())\n\n    this.setState({ location:res.location })\n  }\n\n  async addressFromLocation(lat, lng)\n  {\n    let url = '/api/addressFromLocation?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n\n    this.setState({ address:res.address })\n  }\n\n  async featuredStores(lat, lng)\n  {\n    let url = '/api/featuredStores?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ featuredStores:res.stores })\n    //localStorage.setItem('_featuredStores', JSON.stringify(res.stores))  \n  }\n\n  async stores(lat, lng)\n  {\n    let url = '/api/stores?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ stores:res.stores })\n    //localStorage.setItem('_stores', JSON.stringify(res.stores))  \n  }\n\n  render() {\n    const { \n      location,\n      address,\n      featuredStores,\n      stores,\n\n      authClient,\n      isAuthenticated,\n      user,\n\n      isReady\n    } = this.state;\n\n    const values = { \n      location,\n      address,\n      featuredStores,\n      stores,\n\n      isAuthenticated,\n      user,\n\n      isReady,\n\n      loginWithRedirect: (...p) => authClient.loginWithRedirect(...p),\n      getTokenSilently: (...p) => authClient.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => authClient.getIdTokenClaims(...p),\n      logout: (...p) => authClient.logout(...p)\n    }\n  \n    return (<Context.Provider value={values}>{this.props.children}</Context.Provider>);\n  }\n}\n\nexport default ContextProvider"]},"metadata":{},"sourceType":"module"}