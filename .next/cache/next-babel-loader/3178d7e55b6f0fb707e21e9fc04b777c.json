{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"position\", function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(_this.state.pos);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(navigator.geolocation.getCurrentPosition(function (position) {\n                return _this.setState({\n                  pos: {\n                    lat: parseFloat(position.coords.latitude),\n                    lng: parseFloat(position.coords.longitude)\n                  }\n                });\n              }, function (err) {\n                return function _callee() {\n                  var ip, pos;\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _regeneratorRuntime.awrap(fetch('https://api.ipify.org').then(function (response) {\n                            return response.text();\n                          }));\n\n                        case 2:\n                          ip = _context.sent;\n                          _context.next = 5;\n                          return _regeneratorRuntime.awrap(fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(function (response) {\n                            return response.json();\n                          }));\n\n                        case 5:\n                          pos = _context.sent;\n                          this.setState({\n                            pos: {\n                              lat: parseFloat(pos.latitude),\n                              lng: parseFloat(pos.longitude)\n                            },\n                            stores: []\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, this, null, Promise);\n                };\n              }));\n\n            case 3:\n              console.log(_this.state.pos);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _this.state = {\n      pos: null,\n      stores: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.position();\n      }, 1500);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.pos !== null && this.state.stores.length == 0) {\n        this.getStores(this.state.pos);\n      }\n    }\n  }, {\n    key: \"getStores\",\n    value: function getStores(pos) {\n      var url, stores;\n      return _regeneratorRuntime.async(function getStores$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = '/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              stores = _context3.sent;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, \"test\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","App","props","console","log","state","pos","navigator","geolocation","getCurrentPosition","position","setState","lat","parseFloat","coords","latitude","lng","longitude","err","fetch","then","response","text","ip","json","stores","loading","setTimeout","length","getStores","url"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,+DAuBR;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,GAAvB;AADS;AAAA,+CAEHC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACJ,UAAAC,QAAQ;AAAA,uBAAI,MAAKC,QAAL,CAAc;AAAEL,kBAAAA,GAAG,EAAC;AAC9BM,oBAAAA,GAAG,EAAEC,UAAU,CAACH,QAAQ,CAACI,MAAT,CAAgBC,QAAjB,CADe;AAE9BC,oBAAAA,GAAG,EAAEH,UAAU,CAACH,QAAQ,CAACI,MAAT,CAAgBG,SAAjB;AAFe;AAAN,iBAAd,CAAJ;AAAA,eADJ,EAKJ,UAAAC,GAAG;AAAA,uBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAEUC,KAAK,CAAC,uBAAD,CAAL,CAA+BC,IAA/B,CAAoC,UAAAC,QAAQ;AAAA,mCAAEA,QAAQ,CAACC,IAAT,EAAF;AAAA,2BAA5C,CAFV;;AAAA;AAEDC,0BAAAA,EAFC;AAAA;AAAA,2DAGWJ,KAAK,CAAC,mFAAiFI,EAAlF,CAAL,CAA2FH,IAA3F,CAAgG,UAAAC,QAAQ;AAAA,mCAAEA,QAAQ,CAACG,IAAT,EAAF;AAAA,2BAAxG,CAHX;;AAAA;AAGDlB,0BAAAA,GAHC;AAKL,+BAAKK,QAAL,CAAc;AAAEL,4BAAAA,GAAG,EAAC;AAACM,8BAAAA,GAAG,EAACC,UAAU,CAACP,GAAG,CAACS,QAAL,CAAf;AAA+BC,8BAAAA,GAAG,EAACH,UAAU,CAACP,GAAG,CAACW,SAAL;AAA7C,6BAAN;AAAqEQ,4BAAAA,MAAM,EAAC;AAA5E,2BAAd;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAJ;AAAA,eALC,CAFG;;AAAA;AAeTtB,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,GAAvB;;AAfS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBQ;;AAEjB,UAAKD,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAC,IADO;AAEXmB,MAAAA,MAAM,EAAC,EAFI;AAGXC,MAAAA,OAAO,EAAC;AAHG,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACjB,QAAL;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;;yCAGD;AACE,UAAI,KAAKL,KAAL,CAAWC,GAAX,KAAmB,IAAnB,IAA2B,KAAKD,KAAL,CAAWoB,MAAX,CAAkBG,MAAlB,IAA0B,CAAzD,EACA;AACE,aAAKC,SAAL,CAAe,KAAKxB,KAAL,CAAWC,GAA1B;AACD;AACF;;;8BAoBeA,G;;;;;;AAEVwB,cAAAA,G,GAAM,qBAAoBxB,GAAG,CAACM,GAAxB,GAA6B,OAA7B,GAAqCN,GAAG,CAACU,G;;+CAChCG,KAAK,CAACW,GAAD,CAAL,CAAWV,IAAX,CAAgB,UAAAC,QAAQ;AAAA,uBAAEA,QAAQ,CAACG,IAAT,EAAF;AAAA,eAAxB,C;;;AAAfC,cAAAA,M;;;;;;;;;;;6BAKG;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;;;EAxDe3B,S;;AA2DlB,eAAeG,GAAf","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      pos:null,\n      stores:[],\n      loading:true\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.position()\n    }, 1500)\n  }\n\n  componentDidUpdate()\n  {\n    if (this.state.pos !== null && this.state.stores.length==0)\n    {\n      this.getStores(this.state.pos)\n    }\n  }\n\n  position = async () => {\n    console.log(this.state.pos)\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ pos:{\n        lat: parseFloat(position.coords.latitude), \n        lng: parseFloat(position.coords.longitude)\n      }}), \n      err => async function()\n      {\n        let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n        let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    \n        this.setState({ pos:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}, stores:[] })\n      }\n    )\n    console.log(this.state.pos)\n  }\n\n  async getStores(pos)\n  {\n    let url = '/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let stores = await fetch(url).then(response=>response.json())\n    \n    //this.setState({ stores:stores.stores })\n  }\n  \n  render() {\n    return (\n      <div>\n        test\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}