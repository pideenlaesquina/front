{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/LocationContextProvider.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from 'react';\nimport LocationContext from \"./LocationContext\"; // create a provider\n\nclass LocationContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initialLocation\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        location: position\n      }), err => async function () {\n        let ip = await fetch(process.env.IPIFY_URL).then(response => response.text());\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(response => response.json());\n        this.setState({\n          location: {\n            lat: parseFloat(pos.latitude),\n            lng: parseFloat(pos.longitude)\n          },\n          selectedLocation: {\n            lat: parseFloat(pos.latitude),\n            lng: parseFloat(pos.longitude)\n          }\n        });\n      });\n    });\n\n    this.state = {\n      location: null,\n      selectedLocation: null,\n      featuredStores: null,\n      stores: null,\n      isReady: false,\n      isLoading: true\n    };\n    this.startedAt = new Date();\n  }\n\n  componentDidMount() {\n    this.initialLocation();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedLocation != null && prevState.selectedLocation != this.state.selectedLocation) {\n      this.featuredStores(this.state.selectedLocation);\n      this.stores(this.state.selectedLocation);\n    }\n\n    if (!this.state.isReady && this.state.selectedLocation != null) {\n      let now = new Date();\n      let towait = 2000 - now.getTime() - this.startedAt.getTime();\n\n      if (towait > 0) {\n        setTimeout(() => {\n          this.setState({\n            isReady: true\n          });\n        }, towait);\n      } else {\n        this.setState({\n          isReady: true\n        });\n      }\n    }\n\n    if (this.state.isLoading && this.state.stores != null && this.state.featuredStores != null) {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  updateLocation(newLat, newLng) {\n    this.setState({\n      location: {\n        lat: parseFloat(newLat),\n        lng: parseFloat(newLng)\n      },\n      isLoading: true\n    });\n  }\n\n  async featuredStores(location) {\n    let url = '/api/featuredStores?lat=' + location.lat + '&lng=' + location.lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      featuredStores: res.stores\n    });\n  }\n\n  async stores(location) {\n    let url = '/api/stores?lat=' + location.lat + '&lng=' + location.lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      stores: res.stores\n    });\n  }\n\n  render() {\n    return __jsx(LocationContext.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default LocationContextProvider;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/LocationContextProvider.js"],"names":["React","Component","createContext","LocationContext","LocationContextProvider","constructor","props","navigator","geolocation","getCurrentPosition","position","setState","location","err","ip","fetch","process","env","IPIFY_URL","then","response","text","pos","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","lat","parseFloat","latitude","lng","longitude","selectedLocation","state","featuredStores","stores","isReady","isLoading","startedAt","Date","componentDidMount","initialLocation","componentDidUpdate","prevProps","prevState","now","towait","getTime","setTimeout","updateLocation","newLat","newLng","url","res","render","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\nimport LocationContext from \"./LocationContext\"\n\n// create a provider\nclass LocationContextProvider extends Component {\n   \n  constructor(props)\n  {\n    super(props)\n    this. state = {\n      location:null,\n      selectedLocation:null,\n      featuredStores:null,\n      stores:null,\n      isReady:false,\n      isLoading:true\n    }\n    this.startedAt = new Date()\n  }\n\n  componentDidMount() {\n    this.initialLocation();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.selectedLocation != null && (prevState.selectedLocation != this.state.selectedLocation))\n    {\n      this.featuredStores(this.state.selectedLocation)\n      this.stores(this.state.selectedLocation)\n    }\n\n    if(\n        !this.state.isReady \n        && this.state.selectedLocation !=null)\n    {\n      let now = new Date()\n      let towait = 2000 - now.getTime() - this.startedAt.getTime()\n      \n      if(towait>0)\n      {\n        setTimeout(() => {\n          this.setState({ isReady:true })\n        }, towait)\n      }\n      else\n      {\n        this.setState({ isReady:true })\n      }\n    }\n\n    if(this.state.isLoading \n      && this.state.stores != null \n      && this.state.featuredStores != null)\n    {\n      this.setState({ isLoading:false })\n    }\n  }\n  \n  initialLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ \n        location:position\n      }), \n      err => async function()\n      {\n        let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n    \n        this.setState({ \n          location:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}, \n          selectedLocation:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}\n        })\n      }\n    )\n  }\n\n  updateLocation(newLat, newLng)\n  {\n    this.setState({ \n      location:{lat:parseFloat(newLat), lng:parseFloat(newLng)},\n      isLoading: true \n    })\n  }\n\n  async featuredStores(location)\n  {\n    let url = '/api/featuredStores?lat='+ location.lat +'&lng='+location.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ featuredStores:res.stores })\n  }\n\n  async stores(location)\n  {\n    let url = '/api/stores?lat='+ location.lat +'&lng='+location.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ stores:res.stores })\n  }\n\n  render() {\n    return (<LocationContext.Provider value={this.state}>{this.props.children}</LocationContext.Provider>);\n  }\n}\n\nexport default LocationContextProvider"]},"metadata":{},"sourceType":"module"}