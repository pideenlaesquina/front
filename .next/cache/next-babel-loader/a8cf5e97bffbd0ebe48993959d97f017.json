{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"position\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(navigator.geolocation.getCurrentPosition(function (position) {\n                return _this.setState({\n                  pos: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                  }\n                });\n              }, function (err) {\n                return _this.getPositionFromIp();\n              }));\n\n            case 2:\n              console.log(_this.state.latitude);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _this.state = {\n      pos: null,\n      stores: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.position();\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      var ip, pos;\n      return _regeneratorRuntime.async(function getPosition$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://api.ipify.org').then(function (response) {\n                return response.text();\n              }));\n\n            case 2:\n              ip = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(function (response) {\n                return response.json();\n              }));\n\n            case 5:\n              pos = _context2.sent;\n              this.setState({\n                pos: {\n                  lat: parseFloat(pos.latitude),\n                  lng: parseFloat(pos.longitude)\n                }\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getUserPosition\",\n    value: function getUserPosition() {\n      var coordinates = null; //Updated from browser\n\n      if (navigator.geolocation) {\n        coordinates = navigator.geolocation.getCurrentPosition(function (position) {\n          console.log(this.pos);\n          return {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n        }, function () {\n          return null;\n        });\n      }\n\n      console.log(coordinates);\n      return coordinates;\n    }\n  }, {\n    key: \"getStores\",\n    value: function getStores(pos) {\n      var url, stores;\n      return _regeneratorRuntime.async(function getStores$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = '/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              stores = _context3.sent;\n              return _context3.abrupt(\"return\", stores.stores);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        pos: this.state.pos,\n        stores: this.state.stores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","App","props","navigator","geolocation","getCurrentPosition","position","setState","pos","lat","coords","latitude","lng","longitude","err","getPositionFromIp","console","log","state","stores","fetch","then","response","text","ip","json","parseFloat","coordinates","url"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      pos:null,\n      stores:[]\n    }\n  }\n\n  componentDidMount() {\n    this.position()\n  }\n\n  async getPosition()\n  {\n    let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n    let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    \n    this.setState({ pos:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)} })\n  }\n\n  position = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ pos:{\n        lat: position.coords.latitude, \n        lng: position.coords.longitude\n      }}), \n      err => this.getPositionFromIp()\n    );\n    console.log(this.state.latitude)\n  }\n\n  getUserPosition()\n  {\n    let coordinates = null\n\n    //Updated from browser\n    if (navigator.geolocation) \n    {\n      coordinates = navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(this.pos)\n        return({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        })\n      }, function() {\n        return null\n      })\n    }\n    console.log(coordinates)\n    return coordinates\n  }\n\n  async getStores(pos)\n  {\n    let url = '/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let stores = await fetch(url).then(response=>response.json())\n    return stores.stores\n  }\n  \n  render() {\n    return (\n      <div>\n        <Map pos={this.state.pos} stores={this.state.stores}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}