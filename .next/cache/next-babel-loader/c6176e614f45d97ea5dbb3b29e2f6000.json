{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/Map.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nconst initialZoom = 15;\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      userMarker: null,\n      storeMarkers: [],\n      selectedStore: null\n    };\n  }\n\n  shouldComponentUpdate() {\n    if (this.props.pos == null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.pos != null && (this.props.stores !== null || this.props.selectedStore !== null)) {\n      if (this.state.map === null) {\n        let map = this.getMap(this.props.pos);\n        let userMarker = this.placeUserMarker(map, this.props.pos);\n        let storeMarkers = null;\n        let selectedStore = null;\n\n        if (this.props.stores !== null) {\n          storeMarkers = this.placeAllStoreMarkers(map, this.props.stores);\n        }\n\n        if (this.props.selectedStore !== null) {\n          selectedStore = this.placeAStoreMarker(map, this.props.selectedStore);\n        }\n\n        this.setState({\n          userMarker: userMarker,\n          map: map,\n          storeMarkers: storeMarkers,\n          selectedStore: selectedStore\n        });\n      }\n\n      if (this.state.map !== null && prevProps.pos !== this.props.pos) {\n        let userMarker = this.placeUserMarker(this.state.map, this.props.pos);\n        this.removeAllStoreMarkers();\n        this.setState({\n          userMarker: userMarker\n        });\n      }\n\n      if (this.state.map !== null && prevProps.stores !== this.props.stores) {\n        this.removeAllStoreMarkers();\n        let storeMarkers = this.placeAllStoreMarkers(this.state.map, this.props.stores);\n        this.setState({\n          storeMarkers: storeMarkers\n        });\n      }\n\n      if (this.state.map !== null && prevProps.selectedStore !== this.props.selectedStore) {\n        this.removeSelectedStoreMarker();\n        let selectedStore = this.placeAStoreMarker(this.state.map, this.props.selectedStore);\n        this.setState({\n          selectedStore: selectedStore\n        });\n      }\n    }\n  }\n\n  getMap(pos) {\n    let map = null;\n\n    if (this.state.map == null) {\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: pos,\n        zoom: initialZoom,\n        zoomControl: false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n        streetViewControl: false\n      });\n    } else {\n      map = this.state.map;\n    }\n\n    return map;\n  }\n\n  placeUserMarker(map, pos) {\n    if (this.state.userMarker != null) {\n      this.state.userMarker.setMap(null);\n    }\n\n    let marker = new google.maps.Marker({\n      position: pos,\n      icon: './map/user_icon.svg',\n      title: \"Tu ubicaci√≥n\",\n      draggable: false\n    });\n    marker.setMap(map);\n    this.panToPos(map, pos);\n    return marker;\n  }\n\n  panToPos(map, pos, zoom = initialZoom) {\n    map.setZoom(zoom);\n    map.panTo(pos);\n  }\n\n  placeAllStoreMarkers(map, stores) {\n    let list = [];\n\n    for (let i = 0; i < stores.length; i++) {\n      let store = stores[i];\n\n      if (store._id == null || store.lat == null || store.lng == null || store.name == null) {\n        console.log(\"Skiped store: \" + store.name);\n        continue;\n      }\n\n      let marker = this.placeAStoreMarker(map, store);\n      list.push(marker);\n    }\n\n    return list;\n  }\n\n  removeAllStoreMarkers() {\n    for (let i = 0; i < this.state.storeMarkers.length; i++) {\n      this.state.storeMarkers[i].setMap(null);\n    }\n  }\n\n  removeSelectedStoreMarker() {\n    this.state.selectedStore.setMap(null);\n  }\n\n  placeAStoreMarker(map, store) {\n    store.type = store.type == null ? \"store\" : store.type.toLowerCase();\n    let icon_normal = './map/' + store.type + \"_icon.svg\";\n    let icon_hover = './map/' + store.type + \"_icon_hover.svg\";\n    let marker = new google.maps.Marker({\n      position: {\n        lat: store.lat,\n        lng: store.lng\n      },\n      icon: icon_normal,\n      title: store.name,\n      draggable: false,\n      id: store._id //custom data\n\n    });\n    google.maps.event.addListener(marker, 'click', function () {\n      console.log(\"click \" + marker.id);\n    });\n    google.maps.event.addListener(marker, 'mouseover', function () {\n      marker.setIcon(icon_hover);\n    });\n    google.maps.event.addListener(marker, 'mouseout', function () {\n      marker.setIcon(icon_normal);\n    });\n    marker.setMap(map);\n    return marker;\n  }\n\n  render() {\n    let google_url = process.env.GOOGLE_MAPS_API_URL + \"/js?key=\" + process.env.GOOGLE_MAPS_API_KEY;\n    return __jsx(\"div\", {\n      style: {\n        height: \"100%\",\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, __jsx(\"script\", {\n      src: google_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"100%\",\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }), this.state.map && this.props.stores.length == 0 ? \":)\" : \"\");\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/Map.js"],"names":["React","Head","initialZoom","Map","Component","constructor","props","state","map","userMarker","storeMarkers","selectedStore","shouldComponentUpdate","pos","componentDidUpdate","prevProps","prevState","stores","getMap","placeUserMarker","placeAllStoreMarkers","placeAStoreMarker","setState","removeAllStoreMarkers","removeSelectedStoreMarker","google","maps","document","getElementById","center","zoom","zoomControl","mapTypeControl","fullscreenControl","clickableIcons","streetViewControl","setMap","marker","Marker","position","icon","title","draggable","panToPos","setZoom","panTo","list","i","length","store","_id","lat","lng","name","console","log","push","type","toLowerCase","icon_normal","icon_hover","id","event","addListener","setIcon","render","google_url","process","env","GOOGLE_MAPS_API_URL","GOOGLE_MAPS_API_KEY","height","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,UAAU,EAAC,IAFA;AAGXC,MAAAA,YAAY,EAAC,EAHF;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,QAAG,KAAKN,KAAL,CAAWO,GAAX,IAAkB,IAArB,EACA;AACE,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAClB;AACE,QAAG,KAAKV,KAAL,CAAWO,GAAX,IAAkB,IAAlB,KAA2B,KAAKP,KAAL,CAAWW,MAAX,KAAsB,IAAtB,IAA8B,KAAKX,KAAL,CAAWK,aAAX,KAA6B,IAAtF,CAAH,EACA;AACE,UAAG,KAAKJ,KAAL,CAAWC,GAAX,KAAmB,IAAtB,EACA;AACE,YAAIA,GAAG,GAAC,KAAKU,MAAL,CAAY,KAAKZ,KAAL,CAAWO,GAAvB,CAAR;AACA,YAAIJ,UAAU,GAAC,KAAKU,eAAL,CAAqBX,GAArB,EAA0B,KAAKF,KAAL,CAAWO,GAArC,CAAf;AACA,YAAIH,YAAY,GAAC,IAAjB;AACA,YAAIC,aAAa,GAAC,IAAlB;;AAEA,YAAG,KAAKL,KAAL,CAAWW,MAAX,KAAoB,IAAvB,EACA;AACEP,UAAAA,YAAY,GAAG,KAAKU,oBAAL,CAA0BZ,GAA1B,EAA+B,KAAKF,KAAL,CAAWW,MAA1C,CAAf;AACD;;AAED,YAAG,KAAKX,KAAL,CAAWK,aAAX,KAA2B,IAA9B,EACA;AACEA,UAAAA,aAAa,GAAG,KAAKU,iBAAL,CAAuBb,GAAvB,EAA4B,KAAKF,KAAL,CAAWK,aAAvC,CAAhB;AACD;;AAED,aAAKW,QAAL,CAAe;AACbb,UAAAA,UAAU,EAACA,UADE;AAEbD,UAAAA,GAAG,EAAEA,GAFQ;AAGbE,UAAAA,YAAY,EAAEA,YAHD;AAIbC,UAAAA,aAAa,EAAEA;AAJF,SAAf;AAMD;;AAED,UAAG,KAAKJ,KAAL,CAAWC,GAAX,KAAmB,IAAnB,IAA2BO,SAAS,CAACF,GAAV,KAAkB,KAAKP,KAAL,CAAWO,GAA3D,EACA;AACE,YAAIJ,UAAU,GAAC,KAAKU,eAAL,CAAqB,KAAKZ,KAAL,CAAWC,GAAhC,EAAqC,KAAKF,KAAL,CAAWO,GAAhD,CAAf;AACA,aAAKU,qBAAL;AAEA,aAAKD,QAAL,CAAe;AACbb,UAAAA,UAAU,EAACA;AADE,SAAf;AAGD;;AAED,UAAG,KAAKF,KAAL,CAAWC,GAAX,KAAmB,IAAnB,IAA2BO,SAAS,CAACE,MAAV,KAAqB,KAAKX,KAAL,CAAWW,MAA9D,EACA;AACE,aAAKM,qBAAL;AACA,YAAIb,YAAY,GAAG,KAAKU,oBAAL,CAA0B,KAAKb,KAAL,CAAWC,GAArC,EAA0C,KAAKF,KAAL,CAAWW,MAArD,CAAnB;AAEA,aAAKK,QAAL,CAAe;AACbZ,UAAAA,YAAY,EAAEA;AADD,SAAf;AAGD;;AAED,UAAG,KAAKH,KAAL,CAAWC,GAAX,KAAmB,IAAnB,IAA2BO,SAAS,CAACJ,aAAV,KAA4B,KAAKL,KAAL,CAAWK,aAArE,EACA;AACE,aAAKa,yBAAL;AACA,YAAIb,aAAa,GAAG,KAAKU,iBAAL,CAAuB,KAAKd,KAAL,CAAWC,GAAlC,EAAuC,KAAKF,KAAL,CAAWK,aAAlD,CAApB;AAEA,aAAKW,QAAL,CAAe;AACbX,UAAAA,aAAa,EAAEA;AADF,SAAf;AAGD;AACF;AACF;;AAEDO,EAAAA,MAAM,CAACL,GAAD,EACN;AACE,QAAIL,GAAG,GAAG,IAAV;;AACA,QAAG,KAAKD,KAAL,CAAWC,GAAX,IAAkB,IAArB,EACA;AACEA,MAAAA,GAAG,GAAG,IAAIiB,MAAM,CAACC,IAAP,CAAYvB,GAAhB,CAAoBwB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AACxDC,QAAAA,MAAM,EAAEhB,GADgD;AAExDiB,QAAAA,IAAI,EAAE5B,WAFkD;AAGxD6B,QAAAA,WAAW,EAAC,KAH4C;AAIxDC,QAAAA,cAAc,EAAE,KAJwC;AAKxDC,QAAAA,iBAAiB,EAAE,KALqC;AAMxDC,QAAAA,cAAc,EAAE,KANwC;AAOxDC,QAAAA,iBAAiB,EAAE;AAPqC,OAApD,CAAN;AASD,KAXD,MAaA;AACE3B,MAAAA,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAjB;AACD;;AACD,WAAOA,GAAP;AACD;;AAEDW,EAAAA,eAAe,CAACX,GAAD,EAAMK,GAAN,EACf;AACE,QAAG,KAAKN,KAAL,CAAWE,UAAX,IAAyB,IAA5B,EACA;AACE,WAAKF,KAAL,CAAWE,UAAX,CAAsB2B,MAAtB,CAA6B,IAA7B;AACD;;AAED,QAAIC,MAAM,GAAG,IAAIZ,MAAM,CAACC,IAAP,CAAYY,MAAhB,CAAuB;AAClCC,MAAAA,QAAQ,EAAE1B,GADwB;AAElC2B,MAAAA,IAAI,EAAE,qBAF4B;AAGlCC,MAAAA,KAAK,EAAE,cAH2B;AAIlCC,MAAAA,SAAS,EAAC;AAJwB,KAAvB,CAAb;AAOAL,IAAAA,MAAM,CAACD,MAAP,CAAc5B,GAAd;AACA,SAAKmC,QAAL,CAAcnC,GAAd,EAAmBK,GAAnB;AAEA,WAAOwB,MAAP;AACD;;AAEDM,EAAAA,QAAQ,CAACnC,GAAD,EAAMK,GAAN,EAAWiB,IAAI,GAAC5B,WAAhB,EACR;AACEM,IAAAA,GAAG,CAACoC,OAAJ,CAAYd,IAAZ;AACAtB,IAAAA,GAAG,CAACqC,KAAJ,CAAUhC,GAAV;AACD;;AAEDO,EAAAA,oBAAoB,CAACZ,GAAD,EAAMS,MAAN,EACpB;AACE,QAAI6B,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9B,MAAM,CAAC+B,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIE,KAAK,GAAGhC,MAAM,CAAC8B,CAAD,CAAlB;;AACA,UAAGE,KAAK,CAACC,GAAN,IAAa,IAAb,IAAqBD,KAAK,CAACE,GAAN,IAAa,IAAlC,IAA0CF,KAAK,CAACG,GAAN,IAAa,IAAvD,IAA+DH,KAAK,CAACI,IAAN,IAAc,IAAhF,EACA;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAiBN,KAAK,CAACI,IAAnC;AACA;AACD;;AAED,UAAIhB,MAAM,GAAG,KAAKhB,iBAAL,CAAuBb,GAAvB,EAA4ByC,KAA5B,CAAb;AACAH,MAAAA,IAAI,CAACU,IAAL,CAAUnB,MAAV;AACD;;AAED,WAAOS,IAAP;AACD;;AAEDvB,EAAAA,qBAAqB,GACrB;AACE,SAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxC,KAAL,CAAWG,YAAX,CAAwBsC,MAA5C,EAAoDD,CAAC,EAArD,EACA;AACE,WAAKxC,KAAL,CAAWG,YAAX,CAAwBqC,CAAxB,EAA2BX,MAA3B,CAAkC,IAAlC;AACD;AACF;;AAEDZ,EAAAA,yBAAyB,GACzB;AACE,SAAKjB,KAAL,CAAWI,aAAX,CAAyByB,MAAzB,CAAgC,IAAhC;AACD;;AAEDf,EAAAA,iBAAiB,CAACb,GAAD,EAAMyC,KAAN,EACjB;AACEA,IAAAA,KAAK,CAACQ,IAAN,GAAcR,KAAK,CAACQ,IAAN,IAAY,IAAZ,GAAiB,OAAjB,GAAyBR,KAAK,CAACQ,IAAN,CAAWC,WAAX,EAAvC;AACA,QAAIC,WAAW,GAAG,WAAWV,KAAK,CAACQ,IAAjB,GAAwB,WAA1C;AACA,QAAIG,UAAU,GAAG,WAAWX,KAAK,CAACQ,IAAjB,GAAwB,iBAAzC;AAEA,QAAIpB,MAAM,GAAG,IAAIZ,MAAM,CAACC,IAAP,CAAYY,MAAhB,CAAuB;AAClCC,MAAAA,QAAQ,EAAE;AAACY,QAAAA,GAAG,EAACF,KAAK,CAACE,GAAX;AAAgBC,QAAAA,GAAG,EAACH,KAAK,CAACG;AAA1B,OADwB;AAElCZ,MAAAA,IAAI,EAAEmB,WAF4B;AAGlClB,MAAAA,KAAK,EAACQ,KAAK,CAACI,IAHsB;AAIlCX,MAAAA,SAAS,EAAC,KAJwB;AAKlCmB,MAAAA,EAAE,EAACZ,KAAK,CAACC,GALyB,CAKpB;;AALoB,KAAvB,CAAb;AAQAzB,IAAAA,MAAM,CAACC,IAAP,CAAYoC,KAAZ,CAAkBC,WAAlB,CAA8B1B,MAA9B,EAAsC,OAAtC,EAA+C,YAAW;AACxDiB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAUlB,MAAM,CAACwB,EAA7B;AACD,KAFD;AAIApC,IAAAA,MAAM,CAACC,IAAP,CAAYoC,KAAZ,CAAkBC,WAAlB,CAA8B1B,MAA9B,EAAsC,WAAtC,EAAmD,YAAW;AAC5DA,MAAAA,MAAM,CAAC2B,OAAP,CAAeJ,UAAf;AACD,KAFD;AAIAnC,IAAAA,MAAM,CAACC,IAAP,CAAYoC,KAAZ,CAAkBC,WAAlB,CAA8B1B,MAA9B,EAAsC,UAAtC,EAAkD,YAAW;AAC3DA,MAAAA,MAAM,CAAC2B,OAAP,CAAeL,WAAf;AACD,KAFD;AAIAtB,IAAAA,MAAM,CAACD,MAAP,CAAc5B,GAAd;AACA,WAAO6B,MAAP;AACD;;AAED4B,EAAAA,MAAM,GAAI;AACR,QAAIC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkC,UAAlC,GAA6CF,OAAO,CAACC,GAAR,CAAYE,mBAA1E;AAEA,WACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,KAAK,EAAC;AAAtB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,GAAG,EAAEN,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,KAAK,EAAC;AAAtB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKjE,KAAL,CAAWC,GAAX,IAAkB,KAAKF,KAAL,CAAWW,MAAX,CAAkB+B,MAAlB,IAA0B,CAA5C,GAA8C,IAA9C,GAAmD,EALtD,CADF;AASD;;AA5M+B;;AA+MlC,eAAe7C,GAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\n\nconst initialZoom = 15\n\nclass Map extends React.Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      map: null,\n      userMarker:null,\n      storeMarkers:[],\n      selectedStore: null\n    }\n  }\n\n  shouldComponentUpdate() {\n    if(this.props.pos == null)\n    {\n      return false\n    }\n    return true\n  }\n\n  componentDidUpdate(prevProps, prevState) \n  {\n    if(this.props.pos != null && (this.props.stores !== null || this.props.selectedStore !== null) )\n    {\n      if(this.state.map === null)\n      {\n        let map=this.getMap(this.props.pos)\n        let userMarker=this.placeUserMarker(map, this.props.pos)\n        let storeMarkers=null \n        let selectedStore=null\n\n        if(this.props.stores!==null)\n        {\n          storeMarkers = this.placeAllStoreMarkers(map, this.props.stores)\n        }\n\n        if(this.props.selectedStore!==null)\n        {\n          selectedStore = this.placeAStoreMarker(map, this.props.selectedStore)\n        }\n\n        this.setState ({\n          userMarker:userMarker,\n          map: map,\n          storeMarkers: storeMarkers,\n          selectedStore: selectedStore\n        })\n      }\n      \n      if(this.state.map !== null && prevProps.pos !== this.props.pos)\n      {\n        let userMarker=this.placeUserMarker(this.state.map, this.props.pos)\n        this.removeAllStoreMarkers()\n\n        this.setState ({\n          userMarker:userMarker\n        })\n      }\n\n      if(this.state.map !== null && prevProps.stores !== this.props.stores)\n      {\n        this.removeAllStoreMarkers()\n        let storeMarkers = this.placeAllStoreMarkers(this.state.map, this.props.stores)\n\n        this.setState ({\n          storeMarkers: storeMarkers\n        })\n      }\n      \n      if(this.state.map !== null && prevProps.selectedStore !== this.props.selectedStore)\n      {\n        this.removeSelectedStoreMarker()\n        let selectedStore = this.placeAStoreMarker(this.state.map, this.props.selectedStore)\n\n        this.setState ({\n          selectedStore: selectedStore\n        })\n      }\n    }\n  }\n\n  getMap(pos)\n  {\n    let map = null\n    if(this.state.map == null)\n    {\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: pos,\n        zoom: initialZoom,\n        zoomControl:false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n        streetViewControl: false\n      })\n    }\n    else\n    {\n      map = this.state.map\n    }\n    return map\n  }\n\n  placeUserMarker(map, pos)\n  {\n    if(this.state.userMarker != null)\n    {\n      this.state.userMarker.setMap(null);\n    }\n\n    let marker = new google.maps.Marker({\n      position: pos,\n      icon: './map/user_icon.svg',\n      title: \"Tu ubicaci√≥n\",\n      draggable:false,\n    })\n\n    marker.setMap(map);\n    this.panToPos(map, pos)\n\n    return marker\n  }\n\n  panToPos(map, pos, zoom=initialZoom)\n  {\n    map.setZoom(zoom);\n    map.panTo(pos);\n  }\n\n  placeAllStoreMarkers(map, stores)\n  {\n    let list = []\n    \n    for (let i = 0; i < stores.length; i++) {\n      let store = stores[i]\n      if(store._id == null || store.lat == null || store.lng == null || store.name == null)\n      {\n        console.log(\"Skiped store: \"+store.name)\n        continue\n      }\n\n      let marker = this.placeAStoreMarker(map, store)\n      list.push(marker)\n    }\n\n    return list\n  }\n\n  removeAllStoreMarkers()\n  {\n    for (let i = 0; i < this.state.storeMarkers.length; i++)\n    {\n      this.state.storeMarkers[i].setMap(null)\n    }\n  }\n\n  removeSelectedStoreMarker()\n  {\n    this.state.selectedStore.setMap(null)\n  }\n\n  placeAStoreMarker(map, store)\n  {\n    store.type = (store.type==null?\"store\":store.type.toLowerCase())\n    let icon_normal = './map/' + store.type + \"_icon.svg\";\n    let icon_hover = './map/' + store.type + \"_icon_hover.svg\";\n    \n    let marker = new google.maps.Marker({\n      position: {lat:store.lat, lng:store.lng},\n      icon: icon_normal,\n      title:store.name,\n      draggable:false,\n      id:store._id, //custom data\n    })\n\n    google.maps.event.addListener(marker, 'click', function() {\n      console.log(\"click \" +marker.id)       \n    })\n\n    google.maps.event.addListener(marker, 'mouseover', function() {\n      marker.setIcon(icon_hover);\n    })\n\n    google.maps.event.addListener(marker, 'mouseout', function() {\n      marker.setIcon(icon_normal);    \n    })\n\n    marker.setMap(map)\n    return marker\n  }\n\n  render () {\n    let google_url = process.env.GOOGLE_MAPS_API_URL + \"/js?key=\"+process.env.GOOGLE_MAPS_API_KEY\n\n    return (\n      <div style={{height:\"100%\", width:'100%'}}>\n        <Head>\n          <script src={google_url} ></script>\n        </Head>\n        <div id=\"map\" style={{height:\"100%\", width:'100%'}}></div>\n        {this.state.map && this.props.stores.length==0?\":)\":\"\"}\n      </div>\n    )\n  }\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}