{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/ContextProvider.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Context from \"./Context\";\nimport createAuth0Client from '@auth0/auth0-spa-js'; // create a provider\n\nclass ContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"deviceLocation\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.locationFromBrowser(position), err => this.locationFromIp());\n      console.log(\"devicelocation\");\n    });\n\n    _defineProperty(this, \"initializeAuth0\", async () => {\n      const config = {\n        domain: 'acacerca.auth0.com',\n        //process.env.AUTH0_DOMAIN,\n        client_id: 'd8Pv88MjaYWNSUKUHnO9JcudrUPZ6THl',\n        //process.env.AUTH0_CLIENT_ID,\n        redirect_uri: window.location.origin,\n        cacheLocation: 'localstorage'\n      };\n      const auth0Client = await createAuth0Client(config);\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      this.setState({\n        authClient: auth0Client,\n        isAuthenticated,\n        user\n      });\n    });\n\n    this.state = {\n      deviceLocation: null,\n      selectedLocation: null,\n      featuredStores: null,\n      stores: null,\n      orders: null,\n      authClient: null,\n      isAuthenticated: false,\n      user: null,\n      isReady: false\n    };\n    this.startedAt = new Date();\n  }\n\n  componentDidMount() {\n    this.deviceLocation();\n    this.initializeAuth0();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.authClient !== null && this.state.deviceLocation !== null && this.state.selectedLocation === null) {\n      let location = null;\n\n      if (this.state.user !== null && this.state.user.addresses !== null && this.state.user.addresses !== []) {\n        console.log(\"location from user\");\n        location = this.state.user.addresses[0];\n      } else {\n        console.log(\"location no user\");\n        location = this.state.deviceLocation;\n      }\n\n      console.log(location);\n      this.updateSelectedLocation(location.lat, location.lng, location.address, location.type);\n    }\n\n    if (this.state.selectedLocation !== null && prevState.selectedLocation !== this.state.selectedLocation) {\n      this.featuredStores(this.state.selectedLocation.lat, this.state.selectedLocation.lng);\n      this.stores(this.state.selectedLocation.lat, this.state.selectedLocation.lng);\n    }\n\n    if (!this.state.isReady && this.state.selectedLocation !== null && this.state.stores !== null && this.state.featuredStores !== null) {\n      let now = new Date();\n      let towait = 2000 - (now.getTime() - this.startedAt.getTime());\n\n      if (towait > 0) {\n        setTimeout(() => {\n          this.setState({\n            isReady: true\n          });\n        }, towait);\n      } else {\n        this.setState({\n          isReady: true\n        });\n      }\n    }\n  }\n\n  updateSelectedLocation(newLat, newLng, address, type) {\n    let location = {\n      lat: parseFloat(newLat),\n      lng: parseFloat(newLng),\n      address: address,\n      type: type\n    };\n    console.log(\"UpdateSelectedLocation\");\n    console.log(location);\n    this.setState({\n      selectedLocation: location\n    }); //localStorage.setItem('_selectedLocationL', location)  \n  }\n\n  updateDeviceLocation(newLat, newLng, address) {\n    let location = {\n      lat: parseFloat(newLat),\n      lng: parseFloat(newLng),\n      address: address,\n      type: \"device\"\n    };\n    console.log(\"UpdateDeviceLocation\");\n    console.log(location);\n    this.setState({\n      deviceLocation: location\n    }); //localStorage.setItem('_deviceLocation', location)  \n  }\n\n  async locationFromIp() {\n    console.log(\"LocationFromIp\");\n    let url = '/api/locationFromIp';\n    let res = await fetch(url).then(response => response.json());\n    let address = await this.addressFromLocation(lat, lng);\n    this.updateDeviceLocation(res.location.lat, res.location.lng, address);\n  }\n\n  async locationFromBrowser(position) {\n    console.log(\"LocationFromBrowser\");\n    let lat = position.coords.latitude;\n    let lng = position.coords.longitude;\n    let address = await this.addressFromLocation(lat, lng);\n    this.updateDeviceLocation(lat, lng, address);\n  }\n\n  async addressFromLocation(lat, lng) {\n    let url = '/api/addressFromLocation?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    return res.address;\n  }\n\n  async featuredStores(lat, lng) {\n    let url = '/api/featuredStores?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      featuredStores: res.stores\n    }); //localStorage.setItem('_featuredStores', JSON.stringify(res.stores))  \n  }\n\n  async stores(lat, lng) {\n    let url = '/api/stores?lat=' + lat + '&lng=' + lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      stores: res.stores\n    }); //localStorage.setItem('_stores', JSON.stringify(res.stores))  \n  }\n\n  render() {\n    const {\n      deviceLocation,\n      selectedLocation,\n      featuredStores,\n      stores,\n      orders,\n      authClient,\n      isAuthenticated,\n      user,\n      isReady\n    } = this.state;\n    const values = {\n      deviceLocation,\n      selectedLocation,\n      featuredStores,\n      stores,\n      orders,\n      isAuthenticated,\n      user,\n      isReady,\n      loginWithRedirect: (...p) => authClient.loginWithRedirect(...p),\n      getTokenSilently: (...p) => authClient.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => authClient.getIdTokenClaims(...p),\n      logout: (...p) => authClient.logout(...p)\n    };\n    return __jsx(Context.Provider, {\n      value: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, \":)\");\n  }\n\n}\n\nexport default ContextProvider;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/ContextProvider.js"],"names":["React","Component","Context","createAuth0Client","ContextProvider","constructor","props","navigator","geolocation","getCurrentPosition","position","locationFromBrowser","err","locationFromIp","console","log","config","domain","client_id","redirect_uri","window","location","origin","cacheLocation","auth0Client","isAuthenticated","user","getUser","setState","authClient","state","deviceLocation","selectedLocation","featuredStores","stores","orders","isReady","startedAt","Date","componentDidMount","initializeAuth0","componentDidUpdate","prevProps","prevState","addresses","updateSelectedLocation","lat","lng","address","type","now","towait","getTime","setTimeout","newLat","newLng","parseFloat","updateDeviceLocation","url","res","fetch","then","response","json","addressFromLocation","coords","latitude","longitude","render","values","loginWithRedirect","p","getTokenSilently","getIdTokenClaims","logout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Context from \"./Context\"\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n// create a provider\nclass ContextProvider extends Component {\n   \n  constructor(props)\n  {\n    super(props)\n    this. state = {\n      deviceLocation:null,\n      selectedLocation:null,\n\n      featuredStores:null,\n      stores:null,\n      orders:null,\n\n      authClient: null,\n      isAuthenticated: false,\n      user:null,\n\n      isReady:false\n    }\n    \n    this.startedAt = new Date()\n  }\n\n  componentDidMount() {\n    this.deviceLocation()\n    this.initializeAuth0()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.authClient!==null\n      && this.state.deviceLocation!==null\n      && this.state.selectedLocation===null)\n    { \n      let location = null\n      if(this.state.user!==null\n        && this.state.user.addresses!==null\n        && this.state.user.addresses!==[])\n      {\n        console.log(\"location from user\")\n        location = this.state.user.addresses[0]\n      }\n      else\n      {\n        console.log(\"location no user\")\n        location = this.state.deviceLocation\n      }\n      console.log(location)\n      this.updateSelectedLocation(location.lat, location.lng, location.address, location.type)\n    }\n    \n    if(this.state.selectedLocation !== null  \n      && (prevState.selectedLocation !== this.state.selectedLocation))\n    {\n      this.featuredStores(this.state.selectedLocation.lat, this.state.selectedLocation.lng)\n      this.stores(this.state.selectedLocation.lat, this.state.selectedLocation.lng)\n    }\n\n    if(\n        !this.state.isReady \n        && this.state.selectedLocation !== null\n        && this.state.stores !== null\n        && this.state.featuredStores !== null)\n    {\n      let now = new Date()\n      let towait = 2000 - (now.getTime() - this.startedAt.getTime())\n      \n      if(towait>0)\n      {\n        setTimeout(() => {\n          this.setState({ isReady:true })\n        }, towait)\n      }\n      else\n      {\n        this.setState({ isReady:true })\n      }\n    }\n  }\n  \n  deviceLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.locationFromBrowser(position), \n      err => this.locationFromIp()\n    )\n\n    console.log(\"devicelocation\")\n  }\n\n  updateSelectedLocation(newLat, newLng, address, type)\n  {\n    let location = {\n      lat:parseFloat(newLat), \n      lng:parseFloat(newLng),\n      address: address,\n      type: type\n    }\n    console.log(\"UpdateSelectedLocation\")\n    console.log(location)\n    this.setState({ \n      selectedLocation:location\n    })\n\n    //localStorage.setItem('_selectedLocationL', location)  \n  }\n\n  updateDeviceLocation(newLat, newLng, address)\n  {\n    let location = {\n      lat:parseFloat(newLat), \n      lng:parseFloat(newLng),\n      address: address,\n      type: \"device\"\n    }\n    console.log(\"UpdateDeviceLocation\")\n    console.log(location)\n    this.setState({ \n      deviceLocation:location\n    })\n\n    //localStorage.setItem('_deviceLocation', location)  \n  }\n\n  initializeAuth0 = async () => {\n    const config = {\n      domain: 'acacerca.auth0.com',//process.env.AUTH0_DOMAIN,\n      client_id: 'd8Pv88MjaYWNSUKUHnO9JcudrUPZ6THl',//process.env.AUTH0_CLIENT_ID,\n      redirect_uri: window.location.origin,\n      cacheLocation: 'localstorage'\n    }\n\n    const auth0Client = await createAuth0Client(config)\n    const isAuthenticated = await auth0Client.isAuthenticated()\n    const user = isAuthenticated ? await auth0Client.getUser() : null\n\n    this.setState({ authClient:auth0Client, isAuthenticated, user })\n  }\n\n  async locationFromIp()\n  {\n    console.log(\"LocationFromIp\")\n    let url = '/api/locationFromIp'\n    let res = await fetch(url).then(response=>response.json())\n    let address = await this.addressFromLocation(lat,lng)\n\n    this.updateDeviceLocation(res.location.lat, res.location.lng, address)\n  }\n\n  async locationFromBrowser(position)\n  {\n    console.log(\"LocationFromBrowser\")\n    let lat = position.coords.latitude\n    let lng = position.coords.longitude\n    let address = await this.addressFromLocation(lat,lng)\n\n    this.updateDeviceLocation(lat, lng, address)\n  }\n\n  async addressFromLocation(lat, lng)\n  {\n    let url = '/api/addressFromLocation?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n\n    return res.address\n  }\n\n  async featuredStores(lat, lng)\n  {\n    let url = '/api/featuredStores?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ featuredStores:res.stores })\n    //localStorage.setItem('_featuredStores', JSON.stringify(res.stores))  \n  }\n\n  async stores(lat, lng)\n  {\n    let url = '/api/stores?lat='+ lat +'&lng='+lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ stores:res.stores })\n    //localStorage.setItem('_stores', JSON.stringify(res.stores))  \n  }\n\n  render() {\n    const { \n      deviceLocation,\n      selectedLocation,\n      featuredStores,\n      stores,\n      orders,\n\n      authClient,\n      isAuthenticated,\n      user,\n\n      isReady\n    } = this.state;\n\n    const values = { \n      deviceLocation,\n      selectedLocation,\n      featuredStores,\n      stores,\n      orders,\n\n      isAuthenticated,\n      user,\n\n      isReady,\n\n      loginWithRedirect: (...p) => authClient.loginWithRedirect(...p),\n      getTokenSilently: (...p) => authClient.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => authClient.getIdTokenClaims(...p),\n      logout: (...p) => authClient.logout(...p)\n    }\n\n    return (<Context.Provider value={values}>:)</Context.Provider>);\n  }\n}\n\nexport default ContextProvider"]},"metadata":{},"sourceType":"module"}