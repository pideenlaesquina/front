{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/AddressDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nclass CustomDialog extends Ract.Component {\n  constructor(props) {\n    parent(props);\n    this.state = {\n      showForm: false,\n      inputValue: \"\",\n      options: []\n    };\n  }\n\n  render() {\n    return __jsx(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, __jsx(DialogTitle, {\n      id: \"simple-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Selecciona tu direcci\\xF3n\"), __jsx(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, addresses.map(item => __jsx(ListItem, {\n      button: true,\n      onClick: () => handleListItemClick(item),\n      key: item.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, item.type == \"house\" ? __jsx(HomeIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 40\n      }\n    }) : __jsx(BusinessIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 53\n      }\n    }))), __jsx(ListItemText, {\n      primary: item.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }))), __jsx(ListItem, {\n      autoFocus: true,\n      button: true,\n      onClick: () => handleListItemClick(this.props.deviceLocation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, __jsx(MyLocationIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItemText, {\n      primary: \"Ubicaci\\xF3n actual\",\n      secondary: this.this.props.deviceLocation.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), __jsx(ListItem, {\n      autoFocus: true,\n      button: true,\n      onClick: () => handleAddClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }))), __jsx(ListItemText, {\n      primary: \"Agregar direcci\\xF3n\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), __jsx(Collapse, {\n      in: showForm,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: options,\n      getOptionLabel: option => option.address,\n      renderInput: params => __jsx(TextField, _extends({}, params, {\n        label: \"Ingresa tu direcci\\xF3n\",\n        variant: \"outlined\",\n        size: \"small\",\n        fullWidth: true,\n        onChange: handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '200px',\n        background: \"lightgrey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: handleAddressConfirmed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Confirmar direcci\\xF3n\"))));\n  }\n\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Tu direcci\\xF3n: \", selectedValue.address), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Cambiar\"), __jsx(CustomDialog, {\n    selectedLocation: props.selectedLocation,\n    deviceLocation: props.deviceLocation,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    addresses: props.addresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/AddressDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","Collapse","DialogTitle","Dialog","Divider","AddIcon","MyLocationIcon","HomeIcon","BusinessIcon","TextField","Autocomplete","CustomDialog","Ract","Component","constructor","props","parent","state","showForm","inputValue","options","render","handleClose","open","addresses","map","item","handleListItemClick","address","type","deviceLocation","this","handleAddClick","option","params","handleInputChange","width","height","background","handleAddressConfirmed","propTypes","onClose","func","isRequired","bool","selectedValue","string","AddressDialog","setOpen","useState","setSelectedValue","selectedLocation","handleClickOpen","value","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nclass CustomDialog extends Ract.Component \n{\n  constructor (props)\n  {\n    parent(props)\n    this.state = {\n      showForm: false,\n      inputValue: \"\",\n      options:[]\n    }\n  }\n\n  handleClose = () => {\n    this.props.onClose(selectedValue);\n    this.setState({ showForm:false })\n  };\n\n  handleListItemClick = (value) => {\n    onClose(value);\n    this.setState({ showForm:true })\n  };\n\n  handleAddClick = () => {\n    this.setState({ showForm:true })\n  };\n\n  handleAddressConfirmed = () => {\n    this.setState({ showForm:false })\n    handleClose()\n    alert(\":)\")\n  };\n\n  handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  }\n\n  getPredictions = async (text) => {\n    let url = \"https://maps.googleapis.com/maps/api/place/autocomplete/json?input=\"+text+\"&types=address&location=\"+this.props.deviceLocation.lat+\",\"+this.props.deviceLocation.lng+\"&radius=50000&strictbounds&language=es&key=YOUR_API_KEY\"\n    let res = await fetch(url).then(response=>response.json())\n\n    return res\n  }\n\n\n\n  render()\n  {\n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">Selecciona tu dirección</DialogTitle>\n        <List>\n          {addresses.map((item) => (\n            <ListItem button onClick={() => handleListItemClick(item)} key={item.address}>\n              <ListItemAvatar>\n                <Avatar>\n                  {(item.type==\"house\"?<HomeIcon />:<BusinessIcon />)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.address} />\n            </ListItem>\n          ))}\n\n          <ListItem autoFocus button onClick={() => handleListItemClick(this.props.deviceLocation)}>\n            <ListItemAvatar>\n              <Avatar>\n                <MyLocationIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Ubicación actual\" secondary={this.\n              this.props.deviceLocation.address} />\n          </ListItem>\n          <Divider />\n          <ListItem autoFocus button onClick={() => handleAddClick()}>\n            <ListItemAvatar>\n              <Avatar>\n                <AddIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Agregar dirección\" />\n          </ListItem>\n          <Collapse in={showForm} timeout=\"auto\" unmountOnExit>\n            <div>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={options}\n              getOptionLabel={(option) => option.address}\n              renderInput={(params) => \n                  <TextField \n                    {...params} \n                    label=\"Ingresa tu dirección\" \n                    variant=\"outlined\" \n                    size=\"small\"\n                    fullWidth\n                    onChange={handleInputChange}\n                  />\n                }\n            />\n            </div>\n            <div id=\"map\" style={{width:'100%', height:'200px', background:\"lightgrey\"}}></div>\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAddressConfirmed}>\n              Confirmar dirección\n            </Button>\n          </Collapse>\n        </List>\n      </Dialog>\n    )\n  }\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width:'100%', textAlign:'center'}}>\n      <span>\n        <small>Tu dirección: {selectedValue.address}</small>\n        <br></br>\n        <Button onClick={handleClickOpen}>Cambiar</Button>\n        <CustomDialog \n          selectedLocation={props.selectedLocation} \n          deviceLocation={props.deviceLocation} \n          selectedValue={selectedValue} \n          open={open} \n          onClose={handleClose}\n          addresses={props.addresses}\n        />\n      </span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}