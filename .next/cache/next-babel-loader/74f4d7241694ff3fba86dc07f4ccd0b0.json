{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\nimport UserContext from '../components/userContext.js';\nimport AuthContext from '../components/authContext.js';\nimport '../styles.css';\nimport '@brainhubeu/react-carousel/lib/style.css';\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      token: null,\n      user: null,\n      location: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.location(); // const user = localStorage.getItem('user')\n      // const token = localStorage.getItem('token')\n      // if (user && token) {\n      //   this.setState({\n      //     user:user,\n      //     token:token\n      //   });\n      // } else {\n      //   Router.push('/signin');\n      // }\n    });\n\n    _defineProperty(this, \"location\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n      }), err => async function () {\n        let ip = await fetch(process.env.IPIFY_URL).then(response => response.text());\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(response => response.json());\n        this.setState({\n          location: {\n            lat: parseFloat(pos.latitude),\n            lng: parseFloat(pos.longitude)\n          }\n        });\n      });\n    });\n  }\n\n  render() {\n    const auth0 = useContext(AuthContext);\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(AuthContext.Provider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, __jsx(UserContext.Provider, {\n      value: {\n        user: this.state.user,\n        location: this.state.location\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/_app.js"],"names":["React","useContext","App","Router","UserContext","AuthContext","MyApp","token","user","location","navigator","geolocation","getCurrentPosition","position","setState","lat","coords","latitude","lng","longitude","err","ip","fetch","process","env","IPIFY_URL","then","response","text","pos","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","parseFloat","render","auth0","Component","pageProps","props","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,eAAP;AACA,OAAO,0CAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAC7B;AACNK,MAAAA,KAAK,EAAC,IADA;AAENC,MAAAA,IAAI,EAAE,IAFA;AAGNC,MAAAA,QAAQ,EAAC;AAHH,KAD6B;;AAAA,+CAOjB,MAAM;AACxB,WAAKA,QAAL,GADwB,CAGxB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArBoC;;AAAA,sCAuB1B,YAAY;AACrB,YAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACJC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAC;AACnCM,UAAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBC,QADc;AAEnCC,UAAAA,GAAG,EAAEL,QAAQ,CAACG,MAAT,CAAgBG;AAFc;AAAX,OAAd,CADR,EAKJC,GAAG,IAAI,kBACP;AACE,YAAIC,EAAE,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,SAAb,CAAL,CAA6BC,IAA7B,CAAkCC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA5C,CAAf;AACA,YAAIC,GAAG,GAAG,MAAMP,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYM,qBAAZ,GAAmC,gBAAnC,GAAoDP,OAAO,CAACC,GAAR,CAAYO,qBAAhE,GAAsF,MAAtF,GAA6FV,EAA9F,CAAL,CAAuGK,IAAvG,CAA4GC,QAAQ,IAAEA,QAAQ,CAACK,IAAT,EAAtH,CAAhB;AAEA,aAAKlB,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAC;AAACM,YAAAA,GAAG,EAACkB,UAAU,CAACJ,GAAG,CAACZ,QAAL,CAAf;AAA+BC,YAAAA,GAAG,EAACe,UAAU,CAACJ,GAAG,CAACV,SAAL;AAA7C;AAAX,SAAd;AACD,OAXG,CAAN;AAaD,KArCoC;AAAA;;AAuCrCe,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAGlC,UAAU,CAACI,WAAD,CAAxB;AAEA,UAAM;AAAE+B,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AAEA,WACE,MAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAE9B,QAAAA,IAAI,EAAE,KAAK+B,KAAL,CAAW/B,IAAnB;AAAyBC,QAAAA,QAAQ,EAAE,KAAK8B,KAAL,CAAW9B;AAA9C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAe4B,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAnDoC","sourcesContent":["import React, { useContext } from 'react'\nimport App from 'next/app'\nimport Router from 'next/router'\nimport UserContext from '../components/userContext.js'\nimport AuthContext from '../components/authContext.js'\n\nimport '../styles.css'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nexport default class MyApp extends App {\n  state = {\n    token:null,\n    user: null,\n    location:null,\n  }\n\n  componentDidMount = () => {\n    this.location()\n\n    // const user = localStorage.getItem('user')\n    // const token = localStorage.getItem('token')\n\n    // if (user && token) {\n    //   this.setState({\n    //     user:user,\n    //     token:token\n    //   });\n    // } else {\n    //   Router.push('/signin');\n    // }\n  }\n\n  location = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ location:{\n        lat: position.coords.latitude, \n        lng: position.coords.longitude\n      }}), \n      err => async function()\n      {\n        let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n    \n        this.setState({ location:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}})\n      }\n    )\n  }\n\n  render() {\n    const auth0 = useContext(AuthContext);\n\n    const { Component, pageProps } = this.props;\n\n    return (\n      <AuthContext.Provider>\n        <UserContext.Provider value={{ user: this.state.user, location: this.state.location}}>\n          <Component {...pageProps} />\n        </UserContext.Provider>\n      </AuthContext.Provider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}