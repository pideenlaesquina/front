{"ast":null,"code":"\"use strict\";\n\nvar _isomorphicUnfetch = _interopRequireDefault(require(\"isomorphic-unfetch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = async (req, res) => {\n  let ip = await (0, _isomorphicUnfetch.default)(process.env.IPIFY_URL).then(response => response.text());\n  let pos = await (0, _isomorphicUnfetch.default)(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(response => response.json());\n  let location = {\n    lat: parseFloat(pos.latitude),\n    lng: parseFloat(pos.longitude)\n  };\n  res.status(200).json({\n    loc\n  });\n};","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/api/locationFromIp.js"],"names":["module","exports","req","res","ip","process","env","IPIFY_URL","then","response","text","pos","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","location","lat","parseFloat","latitude","lng","longitude","status","loc"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAIC,EAAE,GAAG,MAAM,gCAAMC,OAAO,CAACC,GAAR,CAAYC,SAAlB,EAA6BC,IAA7B,CAAkCC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA5C,CAAf;AACA,MAAIC,GAAG,GAAG,MAAM,gCAAMN,OAAO,CAACC,GAAR,CAAYM,qBAAZ,GAAmC,gBAAnC,GAAoDP,OAAO,CAACC,GAAR,CAAYO,qBAAhE,GAAsF,MAAtF,GAA6FT,EAAnG,EAAuGI,IAAvG,CAA4GC,QAAQ,IAAEA,QAAQ,CAACK,IAAT,EAAtH,CAAhB;AACA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,GAAG,EAACC,UAAU,CAACN,GAAG,CAACO,QAAL,CADH;AAEXC,IAAAA,GAAG,EAACF,UAAU,CAACN,GAAG,CAACS,SAAL;AAFH,GAAf;AAKAjB,EAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;AAAEQ,IAAAA;AAAF,GAArB;AACH,CATD","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nmodule.exports = async (req, res) => {\n    let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n    let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n    let location = {\n        lat:parseFloat(pos.latitude),\n        lng:parseFloat(pos.longitude)\n    }\n    \n    res.status(200).json({ loc })\n}"]},"metadata":{},"sourceType":"script"}