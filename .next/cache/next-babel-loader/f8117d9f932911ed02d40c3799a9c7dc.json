{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/components/Map.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Head from 'next/head';\nvar initialZoom = 15;\n\nvar Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      map: null,\n      userMarker: null,\n      storeMarkers: [],\n      selectedStore: null\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      if (this.props.pos == null) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.pos != null && (this.props.stores !== null || this.props.selectedStore !== null)) {\n        if (this.state.map === null) {\n          var map = this.getMap(this.props.pos);\n          var userMarker = this.placeUserMarker(map, this.props.pos);\n          var storeMarkers = null;\n          var selectedStore = null;\n\n          if (this.props.stores !== null) {\n            storeMarkers = this.placeAllStoreMarkers(map, this.props.stores);\n          }\n\n          if (this.props.selectedStore !== null) {\n            selectedStore = this.placeAStoreMarker(map, this.props.selectedStore);\n          }\n\n          this.setState({\n            userMarker: userMarker,\n            map: map,\n            storeMarkers: storeMarkers,\n            selectedStore: selectedStore\n          });\n        }\n\n        if (this.state.map !== null && prevProps.pos !== this.props.pos) {\n          var _userMarker = this.placeUserMarker(this.state.map, this.props.pos);\n\n          this.removeAllStoreMarkers();\n          this.setState({\n            userMarker: _userMarker\n          });\n        }\n\n        if (this.state.map !== null && prevProps.stores !== this.props.stores) {\n          this.removeAllStoreMarkers();\n\n          var _storeMarkers = this.placeAllStoreMarkers(this.state.map, this.props.stores);\n\n          this.setState({\n            storeMarkers: _storeMarkers\n          });\n        }\n\n        if (this.state.map !== null && prevProps.selectedStore !== this.props.selectedStore) {\n          this.removeSelectedStoreMarker();\n\n          var _selectedStore = this.placeAStoreMarker(this.state.map, this.props.selectedStore);\n\n          this.setState({\n            selectedStore: _selectedStore\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getMap\",\n    value: function getMap(pos) {\n      var map = null;\n\n      if (this.state.map == null) {\n        map = new google.maps.Map(document.getElementById('map'), {\n          center: pos,\n          zoom: initialZoom,\n          zoomControl: false,\n          mapTypeControl: false,\n          fullscreenControl: false,\n          clickableIcons: false,\n          streetViewControl: false\n        });\n      } else {\n        map = this.state.map;\n      }\n\n      return map;\n    }\n  }, {\n    key: \"placeUserMarker\",\n    value: function placeUserMarker(map, pos) {\n      if (this.state.userMarker != null) {\n        this.state.userMarker.setMap(null);\n      }\n\n      var marker = new google.maps.Marker({\n        position: pos,\n        icon: './map/user_icon.svg',\n        title: \"Tu ubicaciÃ³n\",\n        draggable: false\n      });\n      marker.setMap(map);\n      this.panToPos(map, pos);\n      return marker;\n    }\n  }, {\n    key: \"panToPos\",\n    value: function panToPos(map, pos) {\n      var zoom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : initialZoom;\n      map.setZoom(zoom);\n      map.panTo(pos);\n    }\n  }, {\n    key: \"placeAllStoreMarkers\",\n    value: function placeAllStoreMarkers(map, stores) {\n      var list = [];\n\n      for (var i = 0; i < stores.length; i++) {\n        var store = stores[i];\n\n        if (store._id == null || store.lat == null || store.lng == null || store.name == null) {\n          console.log(\"Skiped store: \" + store.name);\n          continue;\n        }\n\n        var marker = this.placeAStoreMarker(map, store);\n        list.push(marker);\n      }\n\n      return list;\n    }\n  }, {\n    key: \"removeAllStoreMarkers\",\n    value: function removeAllStoreMarkers() {\n      for (var i = 0; i < this.state.storeMarkers.length; i++) {\n        this.state.storeMarkers[i].setMap(null);\n      }\n    }\n  }, {\n    key: \"removeSelectedStoreMarker\",\n    value: function removeSelectedStoreMarker() {\n      this.state.selectedStore.setMap(null);\n    }\n  }, {\n    key: \"placeAStoreMarker\",\n    value: function placeAStoreMarker(map, store) {\n      store.type = store.type == null ? \"store\" : store.type.toLowerCase();\n      var icon_normal = './map/' + store.type + \"_icon.svg\";\n      var icon_hover = './map/' + store.type + \"_icon_hover.svg\";\n      var marker = new google.maps.Marker({\n        position: {\n          lat: store.lat,\n          lng: store.lng\n        },\n        icon: icon_normal,\n        title: store.name,\n        draggable: false,\n        id: store._id //custom data\n\n      });\n      google.maps.event.addListener(marker, 'click', function () {\n        console.log(\"click \" + marker.id);\n      });\n      google.maps.event.addListener(marker, 'mouseover', function () {\n        marker.setIcon(icon_hover);\n      });\n      google.maps.event.addListener(marker, 'mouseout', function () {\n        marker.setIcon(icon_normal);\n      });\n      marker.setMap(map);\n      return marker;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var google_url = process.env.GOOGLE_MAPS_API_URL + \"/js?key=\" + process.env.GOOGLE_MAPS_API_KEY;\n      return __jsx(\"div\", {\n        style: {\n          height: \"100%\",\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, __jsx(\"script\", {\n        src: google_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        id: \"map\",\n        style: {\n          height: \"100%\",\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }), this.state.map && this.props.stores.length == 0 ? \":)\" : \"\");\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nexport default Map;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/Map.js"],"names":["React","Head","initialZoom","Map","props","state","map","userMarker","storeMarkers","selectedStore","pos","prevProps","prevState","stores","getMap","placeUserMarker","placeAllStoreMarkers","placeAStoreMarker","setState","removeAllStoreMarkers","removeSelectedStoreMarker","google","maps","document","getElementById","center","zoom","zoomControl","mapTypeControl","fullscreenControl","clickableIcons","streetViewControl","setMap","marker","Marker","position","icon","title","draggable","panToPos","setZoom","panTo","list","i","length","store","_id","lat","lng","name","console","log","push","type","toLowerCase","icon_normal","icon_hover","id","event","addListener","setIcon","google_url","process","env","GOOGLE_MAPS_API_URL","GOOGLE_MAPS_API_KEY","height","width","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\n\nconst initialZoom = 15\n\nclass Map extends React.Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      map: null,\n      userMarker:null,\n      storeMarkers:[],\n      selectedStore: null\n    }\n  }\n\n  shouldComponentUpdate() {\n    if(this.props.pos == null)\n    {\n      return false\n    }\n    return true\n  }\n\n  componentDidUpdate(prevProps, prevState) \n  {\n    if(this.props.pos != null && (this.props.stores !== null || this.props.selectedStore !== null) )\n    {\n      if(this.state.map === null)\n      {\n        let map=this.getMap(this.props.pos)\n        let userMarker=this.placeUserMarker(map, this.props.pos)\n        let storeMarkers=null \n        let selectedStore=null\n\n        if(this.props.stores!==null)\n        {\n          storeMarkers = this.placeAllStoreMarkers(map, this.props.stores)\n        }\n\n        if(this.props.selectedStore!==null)\n        {\n          selectedStore = this.placeAStoreMarker(map, this.props.selectedStore)\n        }\n\n        this.setState ({\n          userMarker:userMarker,\n          map: map,\n          storeMarkers: storeMarkers,\n          selectedStore: selectedStore\n        })\n      }\n      \n      if(this.state.map !== null && prevProps.pos !== this.props.pos)\n      {\n        let userMarker=this.placeUserMarker(this.state.map, this.props.pos)\n        this.removeAllStoreMarkers()\n\n        this.setState ({\n          userMarker:userMarker\n        })\n      }\n\n      if(this.state.map !== null && prevProps.stores !== this.props.stores)\n      {\n        this.removeAllStoreMarkers()\n        let storeMarkers = this.placeAllStoreMarkers(this.state.map, this.props.stores)\n\n        this.setState ({\n          storeMarkers: storeMarkers\n        })\n      }\n      \n      if(this.state.map !== null && prevProps.selectedStore !== this.props.selectedStore)\n      {\n        this.removeSelectedStoreMarker()\n        let selectedStore = this.placeAStoreMarker(this.state.map, this.props.selectedStore)\n\n        this.setState ({\n          selectedStore: selectedStore\n        })\n      }\n    }\n  }\n\n  getMap(pos)\n  {\n    let map = null\n    if(this.state.map == null)\n    {\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: pos,\n        zoom: initialZoom,\n        zoomControl:false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n        streetViewControl: false\n      })\n    }\n    else\n    {\n      map = this.state.map\n    }\n    return map\n  }\n\n  placeUserMarker(map, pos)\n  {\n    if(this.state.userMarker != null)\n    {\n      this.state.userMarker.setMap(null);\n    }\n\n    let marker = new google.maps.Marker({\n      position: pos,\n      icon: './map/user_icon.svg',\n      title: \"Tu ubicaciÃ³n\",\n      draggable:false,\n    })\n\n    marker.setMap(map);\n    this.panToPos(map, pos)\n\n    return marker\n  }\n\n  panToPos(map, pos, zoom=initialZoom)\n  {\n    map.setZoom(zoom);\n    map.panTo(pos);\n  }\n\n  placeAllStoreMarkers(map, stores)\n  {\n    let list = []\n    \n    for (let i = 0; i < stores.length; i++) {\n      let store = stores[i]\n      if(store._id == null || store.lat == null || store.lng == null || store.name == null)\n      {\n        console.log(\"Skiped store: \"+store.name)\n        continue\n      }\n\n      let marker = this.placeAStoreMarker(map, store)\n      list.push(marker)\n    }\n\n    return list\n  }\n\n  removeAllStoreMarkers()\n  {\n    for (let i = 0; i < this.state.storeMarkers.length; i++)\n    {\n      this.state.storeMarkers[i].setMap(null)\n    }\n  }\n\n  removeSelectedStoreMarker()\n  {\n    this.state.selectedStore.setMap(null)\n  }\n\n  placeAStoreMarker(map, store)\n  {\n    store.type = (store.type==null?\"store\":store.type.toLowerCase())\n    let icon_normal = './map/' + store.type + \"_icon.svg\";\n    let icon_hover = './map/' + store.type + \"_icon_hover.svg\";\n    \n    let marker = new google.maps.Marker({\n      position: {lat:store.lat, lng:store.lng},\n      icon: icon_normal,\n      title:store.name,\n      draggable:false,\n      id:store._id, //custom data\n    })\n\n    google.maps.event.addListener(marker, 'click', function() {\n      console.log(\"click \" +marker.id)       \n    })\n\n    google.maps.event.addListener(marker, 'mouseover', function() {\n      marker.setIcon(icon_hover);\n    })\n\n    google.maps.event.addListener(marker, 'mouseout', function() {\n      marker.setIcon(icon_normal);    \n    })\n\n    marker.setMap(map)\n    return marker\n  }\n\n  render () {\n    let google_url = process.env.GOOGLE_MAPS_API_URL + \"/js?key=\"+process.env.GOOGLE_MAPS_API_KEY\n\n    return (\n      <div style={{height:\"100%\", width:'100%'}}>\n        <Head>\n          <script src={google_url} ></script>\n        </Head>\n        <div id=\"map\" style={{height:\"100%\", width:'100%'}}></div>\n        {this.state.map && this.props.stores.length==0?\":)\":\"\"}\n      </div>\n    )\n  }\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}