{"ast":null,"code":"\"use strict\";\n\nvar _isomorphicUnfetch = _interopRequireDefault(require(\"isomorphic-unfetch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = async (req, res) => {\n  if (req.query.address != null && req.query.lat != null && req.query.lng != null) {\n    let query_lat = parseFloat(req.query.lat);\n    let query_lng = parseFloat(req.query.lng);\n    let query_address = req.query.address;\n    let url = process.env.GOOGLE_MAPS_API_URL + \"/place/autocomplete/json?input=\" + query_address + \"&types=address&location=\" + query_lat + \",\" + query_lng + \"&radius=50000&strictbounds&language=es&key=\" + process.env.GOOGLE_MAPS_API_KEY;\n    let ress = await (0, _isomorphicUnfetch.default)(url);\n    let jres = await ress.json();\n    let predictions = jres.predictions;\n    res.status(200).json({\n      predictions\n    });\n  } else {\n    res.status(400).json({\n      error: \"missing parameters\"\n    });\n  }\n};","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/api/addressPrediction.js"],"names":["module","exports","req","res","query","address","lat","lng","query_lat","parseFloat","query_lng","query_address","url","process","env","GOOGLE_MAPS_API_URL","GOOGLE_MAPS_API_KEY","ress","jres","json","predictions","status","error"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAID,GAAG,CAACE,KAAJ,CAAUC,OAAV,IAAqB,IAArB,IAA6BH,GAAG,CAACE,KAAJ,CAAUE,GAAV,IAAiB,IAA9C,IAAsDJ,GAAG,CAACE,KAAJ,CAAUG,GAAV,IAAiB,IAA3E,EAAiF;AAC/E,QAAIC,SAAS,GAAGC,UAAU,CAACP,GAAG,CAACE,KAAJ,CAAUE,GAAX,CAA1B;AACA,QAAII,SAAS,GAAGD,UAAU,CAACP,GAAG,CAACE,KAAJ,CAAUG,GAAX,CAA1B;AACA,QAAII,aAAa,GAAGT,GAAG,CAACE,KAAJ,CAAUC,OAA9B;AAEA,QAAIO,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkC,iCAAlC,GAAoEJ,aAApE,GAAkF,0BAAlF,GAA6GH,SAA7G,GAAuH,GAAvH,GAA2HE,SAA3H,GAAqI,6CAArI,GAAmLG,OAAO,CAACC,GAAR,CAAYE,mBAAzM;AAEA,QAAIC,IAAI,GAAE,MAAM,gCAAML,GAAN,CAAhB;AACA,QAAIM,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAjB;AAEA,QAAIC,WAAW,GAAGF,IAAI,CAACE,WAAvB;AAEAjB,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEC,MAAAA;AAAF,KAArB;AACD,GAbD,MAcK;AACHjB,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAArB;AACD;AACF,CAlBD","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nmodule.exports = async (req, res) => {\n  if (req.query.address != null && req.query.lat != null && req.query.lng != null) {\n    let query_lat = parseFloat(req.query.lat)\n    let query_lng = parseFloat(req.query.lng)\n    let query_address = req.query.address\n    \n    let url = process.env.GOOGLE_MAPS_API_URL + \"/place/autocomplete/json?input=\"+query_address+\"&types=address&location=\"+query_lat+\",\"+query_lng+\"&radius=50000&strictbounds&language=es&key=\"+process.env.GOOGLE_MAPS_API_KEY\n    \n    let ress= await fetch(url)\n    let jres = await ress.json()\n\n    let predictions = jres.predictions\n\n    res.status(200).json({ predictions })\n  }\n  else {\n    res.status(400).json({ error: \"missing parameters\" })\n  }\n}"]},"metadata":{},"sourceType":"script"}