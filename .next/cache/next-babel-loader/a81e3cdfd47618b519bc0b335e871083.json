{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/components/AddressDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nvar CustomDialog = /*#__PURE__*/function (_Ract$Component) {\n  _inherits(CustomDialog, _Ract$Component);\n\n  var _super = _createSuper(CustomDialog);\n\n  function CustomDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CustomDialog);\n\n    parent(props);\n    _this.state = {\n      showForm: false,\n      inputValue: \"\",\n      options: []\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(CustomDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Dialog, {\n        onClose: handleClose,\n        \"aria-labelledby\": \"simple-dialog-title\",\n        open: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, __jsx(DialogTitle, {\n        id: \"simple-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, \"Selecciona tu direcci\\xF3n\"), __jsx(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, addresses.map(function (item) {\n        return __jsx(ListItem, {\n          button: true,\n          onClick: function onClick() {\n            return handleListItemClick(item);\n          },\n          key: item.address,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        }, __jsx(ListItemAvatar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        }, __jsx(Avatar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }, item.type == \"house\" ? __jsx(HomeIcon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 40\n          }\n        }) : __jsx(BusinessIcon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 53\n          }\n        }))), __jsx(ListItemText, {\n          primary: item.address,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }));\n      }), __jsx(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: function onClick() {\n          return handleListItemClick(_this2.props.deviceLocation);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, __jsx(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, __jsx(MyLocationIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }))), __jsx(ListItemText, {\n        primary: \"Ubicaci\\xF3n actual\",\n        secondary: this[\"this\"].props.deviceLocation.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      })), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }), __jsx(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: function onClick() {\n          return handleAddClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, __jsx(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, __jsx(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }))), __jsx(ListItemText, {\n        primary: \"Agregar direcci\\xF3n\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      })), __jsx(Collapse, {\n        \"in\": showForm,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, __jsx(Autocomplete, {\n        id: \"combo-box-demo\",\n        options: options,\n        getOptionLabel: function getOptionLabel(option) {\n          return option.address;\n        },\n        renderInput: function renderInput(params) {\n          return __jsx(TextField, _extends({}, params, {\n            label: \"Ingresa tu direcci\\xF3n\",\n            variant: \"outlined\",\n            size: \"small\",\n            fullWidth: true,\n            onChange: handleInputChange,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: '200px',\n          background: \"lightgrey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: handleAddressConfirmed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"Confirmar direcci\\xF3n\"))));\n    }\n  }]);\n\n  return CustomDialog;\n}(Ract.Component);\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function AddressDialog(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.selectedLocation),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Tu direcci\\xF3n: \", selectedValue.address), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Cambiar\"), __jsx(CustomDialog, {\n    selectedLocation: props.selectedLocation,\n    deviceLocation: props.deviceLocation,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    addresses: props.addresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/AddressDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","Collapse","DialogTitle","Dialog","Divider","AddIcon","MyLocationIcon","HomeIcon","BusinessIcon","TextField","Autocomplete","CustomDialog","props","parent","state","showForm","inputValue","options","handleClose","open","addresses","map","item","handleListItemClick","address","type","deviceLocation","handleAddClick","option","params","handleInputChange","width","height","background","handleAddressConfirmed","Ract","Component","propTypes","onClose","func","isRequired","bool","selectedValue","string","AddressDialog","useState","setOpen","selectedLocation","setSelectedValue","handleClickOpen","value","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nclass CustomDialog extends Ract.Component \n{\n  constructor (props)\n  {\n    parent(props)\n    this.state = {\n      showForm: false,\n      inputValue: \"\",\n      options:[]\n    }\n  }\n\n  handleClose = () => {\n    onClose(selectedValue);\n    this.setState({ showForm:false })\n  };\n\n  handleListItemClick = (value) => {\n    onClose(value);\n    this.setState({ showForm:true })\n  };\n\n  handleAddClick = () => {\n    this.setState({ showForm:true })\n  };\n\n  handleAddressConfirmed = () => {\n    setShowForm(false)\n    handleClose()\n    alert(\":)\")\n  };\n\n  handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  }\n\n  getPredictions = async (text) => {\n    let url = \"https://maps.googleapis.com/maps/api/place/autocomplete/json?input=\"+text+\"&types=address&location=\"+this.props.deviceLocation.lat+\",\"+this.props.deviceLocation.lng+\"&radius=50000&strictbounds&language=es&key=YOUR_API_KEY\"\n    let res = await fetch(url).then(response=>response.json())\n\n    return res\n  }\n\n\n\n  render()\n  {\n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">Selecciona tu dirección</DialogTitle>\n        <List>\n          {addresses.map((item) => (\n            <ListItem button onClick={() => handleListItemClick(item)} key={item.address}>\n              <ListItemAvatar>\n                <Avatar>\n                  {(item.type==\"house\"?<HomeIcon />:<BusinessIcon />)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.address} />\n            </ListItem>\n          ))}\n\n          <ListItem autoFocus button onClick={() => handleListItemClick(this.props.deviceLocation)}>\n            <ListItemAvatar>\n              <Avatar>\n                <MyLocationIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Ubicación actual\" secondary={this.\n              this.props.deviceLocation.address} />\n          </ListItem>\n          <Divider />\n          <ListItem autoFocus button onClick={() => handleAddClick()}>\n            <ListItemAvatar>\n              <Avatar>\n                <AddIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Agregar dirección\" />\n          </ListItem>\n          <Collapse in={showForm} timeout=\"auto\" unmountOnExit>\n            <div>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={options}\n              getOptionLabel={(option) => option.address}\n              renderInput={(params) => \n                  <TextField \n                    {...params} \n                    label=\"Ingresa tu dirección\" \n                    variant=\"outlined\" \n                    size=\"small\"\n                    fullWidth\n                    onChange={handleInputChange}\n                  />\n                }\n            />\n            </div>\n            <div id=\"map\" style={{width:'100%', height:'200px', background:\"lightgrey\"}}></div>\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAddressConfirmed}>\n              Confirmar dirección\n            </Button>\n          </Collapse>\n        </List>\n      </Dialog>\n    )\n  }\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width:'100%', textAlign:'center'}}>\n      <span>\n        <small>Tu dirección: {selectedValue.address}</small>\n        <br></br>\n        <Button onClick={handleClickOpen}>Cambiar</Button>\n        <CustomDialog \n          selectedLocation={props.selectedLocation} \n          deviceLocation={props.deviceLocation} \n          selectedValue={selectedValue} \n          open={open} \n          onClose={handleClose}\n          addresses={props.addresses}\n        />\n      </span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}