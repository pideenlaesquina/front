{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/AddressDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction CustomDialog(props) {\n  const {\n    onClose,\n    selectedValue,\n    open,\n    addresses\n  } = props;\n  const [showForm, setShowForm] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const [listRequested, setListRequested] = React.useState(false);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    setShowForm(false);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  const handleAddClick = () => {\n    setShowForm(true);\n  };\n\n  const handleAddressConfirmed = () => {\n    setShowForm(false);\n    handleClose();\n    alert(\":)\");\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n    getPredictions(inputValue);\n  };\n\n  const handleAutoCompleteValue = (event, newValue) => {\n    if (newValue !== null) {\n      let place = getPlace(newValue.place_id);\n      newAddress = {\n        address: place.formatted_address,\n        lat: place.geometry.location.lat,\n        lng: place.geometry.location.lng\n      };\n      console.log(place);\n    }\n  };\n\n  const getPredictions = async text => {\n    let url = \"/api/addressPrediction?address=\" + text + \"&lat=\" + props.deviceLocation.lat + \"&lng=\" + props.deviceLocation.lng;\n    let res = await fetch(url).then(response => response.json());\n    setOptions(res.predictions);\n  };\n\n  const getPlace = async text => {\n    let url = \"/api/addressPlace?id=\" + text;\n    let res = await fetch(url).then(response => response.json());\n    return res.result;\n  };\n\n  return __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Selecciona tu direcci\\xF3n\"), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, addresses.map(item => __jsx(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(item),\n    key: item.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, item.type == \"house\" ? __jsx(HomeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 38\n    }\n  }) : __jsx(BusinessIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 51\n    }\n  }))), __jsx(ListItemText, {\n    primary: item.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleListItemClick(props.deviceLocation),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(MyLocationIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Ubicaci\\xF3n actual\",\n    secondary: props.deviceLocation.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleAddClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Agregar direcci\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), __jsx(Collapse, {\n    in: showForm,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: options,\n    onChange: handleAutoCompleteValue,\n    getOptionLabel: option => option.description,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      label: \"Ingresa tu direcci\\xF3n\",\n      variant: \"outlined\",\n      size: \"small\",\n      fullWidth: true,\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '150px',\n      background: \"lightgrey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: handleAddressConfirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Confirmar direcci\\xF3n\"))));\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Tu direcci\\xF3n: \", selectedValue.address), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Cambiar\"), __jsx(CustomDialog, {\n    selectedLocation: props.selectedLocation,\n    deviceLocation: props.deviceLocation,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    addresses: props.addresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/AddressDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","Collapse","DialogTitle","Dialog","Divider","AddIcon","MyLocationIcon","HomeIcon","BusinessIcon","TextField","Autocomplete","CustomDialog","props","onClose","selectedValue","open","addresses","showForm","setShowForm","useState","inputValue","setInputValue","options","setOptions","listRequested","setListRequested","handleClose","handleListItemClick","value","handleAddClick","handleAddressConfirmed","alert","handleInputChange","event","target","getPredictions","handleAutoCompleteValue","newValue","place","getPlace","place_id","newAddress","address","formatted_address","lat","geometry","location","lng","console","log","text","url","deviceLocation","res","fetch","then","response","json","predictions","result","map","item","type","option","description","params","width","height","background","propTypes","func","isRequired","bool","string","AddressDialog","setOpen","setSelectedValue","selectedLocation","handleClickOpen","textAlign"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,MAA8CJ,KAApD;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BzB,KAAK,CAAC0B,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B5B,KAAK,CAAC0B,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB9B,KAAK,CAAC0B,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoChC,KAAK,CAAC0B,QAAN,CAAe,KAAf,CAA1C;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxBb,IAAAA,OAAO,CAACC,aAAD,CAAP;AACAI,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMS,mBAAmB,GAAIC,KAAD,IAAW;AACrCf,IAAAA,OAAO,CAACe,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMY,sBAAsB,GAAG,MAAM;AACnCZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,IAAAA,WAAW;AACXK,IAAAA,KAAK,CAAC,IAAD,CAAL;AACD,GAJD;;AAMA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCZ,IAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAb;AACAO,IAAAA,cAAc,CAACf,UAAD,CAAd;AACD,GAHD;;AAKA,QAAMgB,uBAAuB,GAAG,CAACH,KAAD,EAAQI,QAAR,KAAqB;AACnD,QAAGA,QAAQ,KAAG,IAAd,EACA;AACE,UAAIC,KAAK,GAAGC,QAAQ,CAACF,QAAQ,CAACG,QAAV,CAApB;AACAC,MAAAA,UAAU,GAAG;AACXC,QAAAA,OAAO,EAAEJ,KAAK,CAACK,iBADJ;AAEXC,QAAAA,GAAG,EAACN,KAAK,CAACO,QAAN,CAAeC,QAAf,CAAwBF,GAFjB;AAGXG,QAAAA,GAAG,EAACT,KAAK,CAACO,QAAN,CAAeC,QAAf,CAAwBC;AAHjB,OAAb;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD;AACF,GAXD;;AAaA,QAAMH,cAAc,GAAG,MAAOe,IAAP,IAAgB;AACrC,QAAIC,GAAG,GAAG,oCAAkCD,IAAlC,GAAuC,OAAvC,GAA+CtC,KAAK,CAACwC,cAAN,CAAqBR,GAApE,GAAwE,OAAxE,GAAgFhC,KAAK,CAACwC,cAAN,CAAqBL,GAA/G;AACA,QAAIM,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA1B,CAAhB;AAEAlC,IAAAA,UAAU,CAAC8B,GAAG,CAACK,WAAL,CAAV;AACD,GALD;;AAOA,QAAMnB,QAAQ,GAAG,MAAOW,IAAP,IAAgB;AAC/B,QAAIC,GAAG,GAAG,0BAAwBD,IAAlC;AACA,QAAIG,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA1B,CAAhB;AAEA,WAAOJ,GAAG,CAACM,MAAX;AACD,GALD;;AAOA,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEjC,WAAjB;AAA8B,uBAAgB,qBAA9C;AAAoE,IAAA,IAAI,EAAEX,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAAC4C,GAAV,CAAeC,IAAD,IACb,MAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,EAAE,MAAMlC,mBAAmB,CAACkC,IAAD,CAAnD;AAA2D,IAAA,GAAG,EAAEA,IAAI,CAACnB,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACImB,IAAI,CAACC,IAAL,IAAW,OAAX,GAAmB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAgC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,CADF,CADF,EAME,MAAC,YAAD;AAAc,IAAA,OAAO,EAAED,IAAI,CAACnB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,EAYE,MAAC,QAAD;AAAU,IAAA,SAAS,MAAnB;AAAoB,IAAA,MAAM,MAA1B;AAA2B,IAAA,OAAO,EAAE,MAAMf,mBAAmB,CAACf,KAAK,CAACwC,cAAP,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,qBAAtB;AAAyC,IAAA,SAAS,EAAExC,KAAK,CAACwC,cAAN,CAAqBV,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAZF,EAoBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAqBE,MAAC,QAAD;AAAU,IAAA,SAAS,MAAnB;AAAoB,IAAA,MAAM,MAA1B;AAA2B,IAAA,OAAO,EAAE,MAAMb,cAAc,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CArBF,EA6BE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAEZ,QAAd;AAAwB,IAAA,OAAO,EAAC,MAAhC;AAAuC,IAAA,aAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAEK,OAFX;AAGE,IAAA,QAAQ,EAAEc,uBAHZ;AAIE,IAAA,cAAc,EAAG2B,MAAD,IAAYA,MAAM,CAACC,WAJrC;AAKE,IAAA,WAAW,EAAGC,MAAD,IACT,MAAC,SAAD,eACMA,MADN;AAEE,MAAA,KAAK,EAAC,yBAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,SAAS,MALX;AAME,MAAA,QAAQ,EAAEjC,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,EAmBE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACkC,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,MAAM,EAAC,OAAtB;AAA+BC,MAAAA,UAAU,EAAC;AAA1C,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,OAAO,EAAEtC,sBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBF,CA7BF,CAFF,CADF;AA2DD;;AAEDnB,YAAY,CAAC0D,SAAb,GAAyB;AACvBxD,EAAAA,OAAO,EAAEnB,SAAS,CAAC4E,IAAV,CAAeC,UADD;AAEvBxD,EAAAA,IAAI,EAAErB,SAAS,CAAC8E,IAAV,CAAeD,UAFE;AAGvBzD,EAAAA,aAAa,EAAEpB,SAAS,CAAC+E,MAAV,CAAiBF;AAHT,CAAzB;AAMA,eAAe,SAASG,aAAT,CAAuB9D,KAAvB,EAA8B;AAC3C,QAAM,CAACG,IAAD,EAAO4D,OAAP,IAAkBlF,KAAK,CAAC0B,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACL,aAAD,EAAgB8D,gBAAhB,IAAoCnF,KAAK,CAAC0B,QAAN,CAAeP,KAAK,CAACiE,gBAArB,CAA1C;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMjD,WAAW,GAAIE,KAAD,IAAW;AAC7B+C,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,gBAAgB,CAAChD,KAAD,CAAhB;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,KAAK,EAAE;AAACsC,MAAAA,KAAK,EAAC,MAAP;AAAea,MAAAA,SAAS,EAAC;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBjE,aAAa,CAAC4B,OAApC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEoC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,MAAC,YAAD;AACE,IAAA,gBAAgB,EAAElE,KAAK,CAACiE,gBAD1B;AAEE,IAAA,cAAc,EAAEjE,KAAK,CAACwC,cAFxB;AAGE,IAAA,aAAa,EAAEtC,aAHjB;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,OAAO,EAAEW,WALX;AAME,IAAA,SAAS,EAAEd,KAAK,CAACI,SANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAiBD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction CustomDialog(props) {\n  const { onClose, selectedValue, open, addresses } = props;\n  const [showForm, setShowForm] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const [listRequested, setListRequested] = React.useState(false);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    setShowForm(false)\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  const handleAddClick = () => {\n    setShowForm(true)\n  };\n\n  const handleAddressConfirmed = () => {\n    setShowForm(false)\n    handleClose()\n    alert(\":)\")\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n    getPredictions(inputValue)\n  }\n\n  const handleAutoCompleteValue = (event, newValue) => {\n    if(newValue!==null)\n    {\n      let place = getPlace(newValue.place_id)\n      newAddress = { \n        address: place.formatted_address, \n        lat:place.geometry.location.lat, \n        lng:place.geometry.location.lng\n      }\n      console.log(place)\n    }\n  }\n\n  const getPredictions = async (text) => {\n    let url = \"/api/addressPrediction?address=\"+text+\"&lat=\"+props.deviceLocation.lat+\"&lng=\"+props.deviceLocation.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    setOptions(res.predictions)\n  }\n\n  const getPlace = async (text) => {\n    let url = \"/api/addressPlace?id=\"+text\n    let res = await fetch(url).then(response=>response.json())\n    \n    return res.result\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Selecciona tu dirección</DialogTitle>\n      <List>\n        {addresses.map((item) => (\n          <ListItem button onClick={() => handleListItemClick(item)} key={item.address}>\n            <ListItemAvatar>\n              <Avatar>\n                {(item.type==\"house\"?<HomeIcon />:<BusinessIcon />)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={item.address} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick(props.deviceLocation)}>\n          <ListItemAvatar>\n            <Avatar>\n              <MyLocationIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Ubicación actual\" secondary={props.deviceLocation.address} />\n        </ListItem>\n        <Divider />\n        <ListItem autoFocus button onClick={() => handleAddClick()}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Agregar dirección\" />\n        </ListItem>\n        <Collapse in={showForm} timeout=\"auto\" unmountOnExit>\n          <div>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={options}\n            onChange={handleAutoCompleteValue}\n            getOptionLabel={(option) => option.description}\n            renderInput={(params) => \n                <TextField \n                  {...params} \n                  label=\"Ingresa tu dirección\" \n                  variant=\"outlined\" \n                  size=\"small\"\n                  fullWidth\n                  onChange={handleInputChange}\n                /> \n              }\n          />\n          </div>\n          <div id=\"map\" style={{width:'100%', height:'150px', background:\"lightgrey\"}}></div>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAddressConfirmed}>\n            Confirmar dirección\n          </Button>\n        </Collapse>\n      </List>\n    </Dialog>\n  );\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width:'100%', textAlign:'center'}}>\n      <span>\n        <small>Tu dirección: {selectedValue.address}</small>\n        <br></br>\n        <Button onClick={handleClickOpen}>Cambiar</Button>\n        <CustomDialog \n          selectedLocation={props.selectedLocation} \n          deviceLocation={props.deviceLocation} \n          selectedValue={selectedValue} \n          open={open} \n          onClose={handleClose}\n          addresses={props.addresses}\n        />\n      </span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}