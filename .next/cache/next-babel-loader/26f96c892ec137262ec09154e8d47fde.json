{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/userContext.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from 'react';\nexport const UserContext = createContext(); // create a provider\n\nexport class UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: null,\n      position: null\n    });\n\n    _defineProperty(this, \"config\", {\n      domain: process.env.AUTH0_DOMAIN,\n      client_id: process.env.AUTH0_CLIENT_ID,\n      redirect_uri: window.location.origin\n    });\n\n    _defineProperty(this, \"location\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n      }), err => async function () {\n        let ip = await fetch(process.env.IPIFY_URL).then(response => response.text());\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(response => response.json());\n        this.setState({\n          location: {\n            lat: parseFloat(pos.latitude),\n            lng: parseFloat(pos.longitude)\n          }\n        });\n      });\n    });\n\n    _defineProperty(this, \"initializeAuth0\", async () => {\n      const auth0Client = await createAuth0Client(this.config);\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      this.setState({\n        auth0Client,\n        isLoading: false,\n        isAuthenticated,\n        user\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.initializeAuth0();\n  }\n\n  render() {\n    const {\n      auth0Client,\n      isLoading,\n      isAuthenticated,\n      user\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    const configObject = {\n      isLoading,\n      isAuthenticated,\n      user,\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    };\n    return __jsx(AuthContext.Provider, {\n      value: configObject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n}\nexport default AuthContext;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/userContext.js"],"names":["React","Component","createContext","UserContext","UserProvider","user","position","domain","process","env","AUTH0_DOMAIN","client_id","AUTH0_CLIENT_ID","redirect_uri","window","location","origin","navigator","geolocation","getCurrentPosition","setState","lat","coords","latitude","lng","longitude","err","ip","fetch","IPIFY_URL","then","response","text","pos","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","parseFloat","auth0Client","createAuth0Client","config","isAuthenticated","getUser","isLoading","componentDidMount","initializeAuth0","render","state","children","props","configObject","loginWithRedirect","p","getTokenSilently","getIdTokenClaims","logout","AuthContext"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const UserContext = createContext();\n\n// create a provider\nexport class UserProvider extends Component {\n    state = {\n        user:null,\n        position:null\n    }\n\n    config = {\n        domain: process.env.AUTH0_DOMAIN,\n        client_id: process.env.AUTH0_CLIENT_ID,\n        redirect_uri: window.location.origin\n    }\n\n    componentDidMount() {\n        this.initializeAuth0();\n    }\n\n    location = async () => {\n        await navigator.geolocation.getCurrentPosition(\n            position => this.setState({ location:{\n            lat: position.coords.latitude, \n            lng: position.coords.longitude\n            }}), \n            err => async function()\n            {\n            let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n            let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n        \n            this.setState({ location:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}})\n            }\n        )\n    }\n\n    // initialize the auth0 library\n    initializeAuth0 = async () => {\n        const auth0Client = await createAuth0Client(this.config)\n        const isAuthenticated = await auth0Client.isAuthenticated()\n        const user = isAuthenticated ? await auth0Client.getUser() : null\n\n        this.setState({ auth0Client, isLoading:false, isAuthenticated, user })\n    };\n\n    render() {\n        const { auth0Client, isLoading, isAuthenticated, user} = this.state;\n        const { children } = this.props\n\n        const configObject = { \n            isLoading, \n            isAuthenticated, \n            user,\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n            logout: (...p) => auth0Client.logout(...p)\n        }\n\n        return (\n            <AuthContext.Provider value={configObject}>\n                {children}\n            </AuthContext.Provider>\n        );\n    }\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}