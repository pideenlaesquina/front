{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/components/AddressDialog.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { blue } from '@material-ui/core/colors';\n\nfunction CustomDialog(props) {\n  var _this = this;\n\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      open = props.open,\n      addresses = props.addresses;\n\n  var handleClose = function handleClose() {\n    onClose(selectedValue);\n  };\n\n  var handleListItemClick = function handleListItemClick(value) {\n    onClose(value);\n  };\n\n  return __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Selecciona tu direcci\\xF3n\"), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, addresses.map(function (item) {\n    return __jsx(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return handleListItemClick(item);\n      },\n      key: item.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, item.type == \"house\" ? __jsx(HomeIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 38\n      }\n    }) : __jsx(BusinessIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 51\n      }\n    }))), __jsx(ListItemText, {\n      primary: item.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }));\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick(props.currentLocation);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(MyLocationIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Ubicaci\\xF3n actual\",\n    secondary: props.deviceLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick('add');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Agregar direcci\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function AddressDialog(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.selectedLocation),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Tu direcci\\xF3n: \", selectedValue.address), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Cambiar\"), __jsx(CustomDialog, {\n    currentLocation: props.selectedLocation,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    addresses: props.addresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/AddressDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","Divider","AddIcon","MyLocationIcon","HomeIcon","BusinessIcon","blue","CustomDialog","props","onClose","selectedValue","open","addresses","handleClose","handleListItemClick","value","map","item","address","type","currentLocation","deviceLocation","propTypes","func","isRequired","bool","string","AddressDialog","useState","setOpen","selectedLocation","setSelectedValue","handleClickOpen","width","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { blue } from '@material-ui/core/colors';\n\nfunction CustomDialog(props) {\n  const { onClose, selectedValue, open, addresses } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Selecciona tu dirección</DialogTitle>\n      <List>\n        {addresses.map((item) => (\n          <ListItem button onClick={() => handleListItemClick(item)} key={item.address}>\n            <ListItemAvatar>\n              <Avatar>\n                {(item.type==\"house\"?<HomeIcon />:<BusinessIcon />)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={item.address} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick(props.currentLocation)}>\n          <ListItemAvatar>\n            <Avatar>\n              <MyLocationIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Ubicación actual\" secondary={props.deviceLocation} />\n        </ListItem>\n        <Divider />\n        <ListItem autoFocus button onClick={() => handleListItemClick('add')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Agregar dirección\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width:'100%', textAlign:'center'}}>\n      <span>\n        <small>Tu dirección: {selectedValue.address}</small>\n        <br></br>\n        <Button onClick={handleClickOpen}>Cambiar</Button>\n        <CustomDialog \n          currentLocation={props.selectedLocation} \n          selectedValue={selectedValue} \n          open={open} \n          onClose={handleClose}\n          addresses={props.addresses}\n        />\n      </span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}