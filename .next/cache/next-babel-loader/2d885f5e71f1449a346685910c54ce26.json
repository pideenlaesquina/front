{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/components/AddressDialog.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction CustomDialog(props) {\n  var _this = this;\n\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      open = props.open,\n      addresses = props.addresses;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showForm = _React$useState2[0],\n      setShowForm = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputValue = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      options = _React$useState6[0],\n      setOptions = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      listRequested = _React$useState8[0],\n      setListRequested = _React$useState8[1];\n\n  var handleClose = function handleClose() {\n    onClose(selectedValue);\n    setShowForm(false);\n  };\n\n  var handleListItemClick = function handleListItemClick(value) {\n    onClose(value);\n  };\n\n  var handleAddClick = function handleAddClick() {\n    setShowForm(true);\n  };\n\n  var handleAddressConfirmed = function handleAddressConfirmed() {\n    setShowForm(false);\n    handleClose();\n    alert(\":)\");\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    setInputValue(event.target.value);\n    setListRequested(true);\n  };\n\n  var getPredictions = function getPredictions(text) {\n    var url, res;\n    return _regeneratorRuntime.async(function getPredictions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"/api/addressPrediction?address=\" + text + \"&lat=\" + props.deviceLocation.lat + \"&lng=\" + props.deviceLocation.lng;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n              return response.json();\n            }));\n\n          case 3:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.predictions);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    var options = [];\n\n    if (listRequested && inputValue.length > 0) {\n      options = getPredictions(inputValue);\n      console.log(options);\n      setListRequested(false);\n      setOptions(options);\n    }\n  });\n  return __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Selecciona tu direcci\\xF3n\"), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, addresses.map(function (item) {\n    return __jsx(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return handleListItemClick(item);\n      },\n      key: item.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, item.type == \"house\" ? __jsx(HomeIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }\n    }) : __jsx(BusinessIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 51\n      }\n    }))), __jsx(ListItemText, {\n      primary: item.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }));\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick(props.deviceLocation);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(MyLocationIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Ubicaci\\xF3n actual\",\n    secondary: props.deviceLocation.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: function onClick() {\n      return handleAddClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Agregar direcci\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), __jsx(Collapse, {\n    \"in\": showForm,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: options,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.description;\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Ingresa tu direcci\\xF3n\",\n        variant: \"outlined\",\n        size: \"small\",\n        fullWidth: true,\n        onChange: handleInputChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '200px',\n      background: \"lightgrey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: handleAddressConfirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Confirmar direcci\\xF3n\"))));\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function AddressDialog(props) {\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      open = _React$useState10[0],\n      setOpen = _React$useState10[1];\n\n  var _React$useState11 = React.useState(props.selectedLocation),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      selectedValue = _React$useState12[0],\n      setSelectedValue = _React$useState12[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Tu direcci\\xF3n: \", selectedValue.address), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Cambiar\"), __jsx(CustomDialog, {\n    selectedLocation: props.selectedLocation,\n    deviceLocation: props.deviceLocation,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    addresses: props.addresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/AddressDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","Collapse","DialogTitle","Dialog","Divider","AddIcon","MyLocationIcon","HomeIcon","BusinessIcon","TextField","Autocomplete","CustomDialog","props","onClose","selectedValue","open","addresses","useState","showForm","setShowForm","inputValue","setInputValue","options","setOptions","listRequested","setListRequested","handleClose","handleListItemClick","value","handleAddClick","handleAddressConfirmed","alert","handleInputChange","event","target","getPredictions","text","url","deviceLocation","lat","lng","fetch","then","response","json","res","predictions","useEffect","length","console","log","map","item","address","type","option","description","params","width","height","background","propTypes","func","isRequired","bool","string","AddressDialog","setOpen","selectedLocation","setSelectedValue","handleClickOpen","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction CustomDialog(props) {\n  const { onClose, selectedValue, open, addresses } = props;\n  const [showForm, setShowForm] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const [listRequested, setListRequested] = React.useState(false);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    setShowForm(false)\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  const handleAddClick = () => {\n    setShowForm(true)\n  };\n\n  const handleAddressConfirmed = () => {\n    setShowForm(false)\n    handleClose()\n    alert(\":)\")\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n    setListRequested(true)\n  }\n\n  const getPredictions = async (text) => {\n    let url = \"/api/addressPrediction?address=\"+text+\"&lat=\"+props.deviceLocation.lat+\"&lng=\"+props.deviceLocation.lng\n    let res = await fetch(url).then(response=>response.json())\n    return res.predictions\n  }\n\n  React.useEffect(() => {\n\n    let options = []\n\n    if(listRequested && inputValue.length>0)\n    {\n      options = getPredictions(inputValue)\n      console.log(options)\n      setListRequested(false)\n      setOptions(options)\n    }\n\n    \n    \n  });\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Selecciona tu dirección</DialogTitle>\n      <List>\n        {addresses.map((item) => (\n          <ListItem button onClick={() => handleListItemClick(item)} key={item.address}>\n            <ListItemAvatar>\n              <Avatar>\n                {(item.type==\"house\"?<HomeIcon />:<BusinessIcon />)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={item.address} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick(props.deviceLocation)}>\n          <ListItemAvatar>\n            <Avatar>\n              <MyLocationIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Ubicación actual\" secondary={props.deviceLocation.address} />\n        </ListItem>\n        <Divider />\n        <ListItem autoFocus button onClick={() => handleAddClick()}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Agregar dirección\" />\n        </ListItem>\n        <Collapse in={showForm} timeout=\"auto\" unmountOnExit>\n          <div>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={options}\n            getOptionLabel={(option) => option.description}\n            renderInput={(params) => \n                <TextField \n                  {...params} \n                  label=\"Ingresa tu dirección\" \n                  variant=\"outlined\" \n                  size=\"small\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              }\n          />\n          </div>\n          <div id=\"map\" style={{width:'100%', height:'200px', background:\"lightgrey\"}}></div>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAddressConfirmed}>\n            Confirmar dirección\n          </Button>\n        </Collapse>\n      </List>\n    </Dialog>\n  );\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width:'100%', textAlign:'center'}}>\n      <span>\n        <small>Tu dirección: {selectedValue.address}</small>\n        <br></br>\n        <Button onClick={handleClickOpen}>Cambiar</Button>\n        <CustomDialog \n          selectedLocation={props.selectedLocation} \n          deviceLocation={props.deviceLocation} \n          selectedValue={selectedValue} \n          open={open} \n          onClose={handleClose}\n          addresses={props.addresses}\n        />\n      </span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}