{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport Map from '../components/map.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"position\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        pos: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n      }), err => async function () {\n        let ip = await fetch('https://api.ipify.org').then(response => response.text());\n        let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip=' + ip).then(response => response.json());\n        this.setState({\n          pos: {\n            lat: parseFloat(pos.latitude),\n            lng: parseFloat(pos.longitude)\n          },\n          stores: null\n        });\n      });\n    });\n\n    this.state = {\n      pos: null,\n      stores: null\n    };\n  }\n\n  componentDidMount() {\n    this.position();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.pos != null && prevState.pos != this.state.pos) {\n      this.getStores(this.state.pos);\n    } else {\n      console.log(\"index.js loop\");\n    }\n  }\n\n  async getStores(pos) {\n    let url = '/api/stores?lat=' + pos.lat + '&lng=' + pos.lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      stores: res.stores\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      pos: this.state.pos,\n      stores: this.state.stores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","Map","App","constructor","props","navigator","geolocation","getCurrentPosition","position","setState","pos","lat","coords","latitude","lng","longitude","err","ip","fetch","then","response","text","json","parseFloat","stores","state","componentDidMount","componentDidUpdate","prevProps","prevState","getStores","console","log","url","res","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,sCAuBR,YAAY;AACrB,YAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACJC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,GAAG,EAAC;AAC9BC,UAAAA,GAAG,EAAEH,QAAQ,CAACI,MAAT,CAAgBC,QADS;AAE9BC,UAAAA,GAAG,EAAEN,QAAQ,CAACI,MAAT,CAAgBG;AAFS;AAAN,OAAd,CADR,EAKJC,GAAG,IAAI,kBACP;AACE,YAAIC,EAAE,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAAL,CAA+BC,IAA/B,CAAoCC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAA9C,CAAf;AACA,YAAIX,GAAG,GAAG,MAAMQ,KAAK,CAAC,mFAAiFD,EAAlF,CAAL,CAA2FE,IAA3F,CAAgGC,QAAQ,IAAEA,QAAQ,CAACE,IAAT,EAA1G,CAAhB;AAEA,aAAKb,QAAL,CAAc;AAAEC,UAAAA,GAAG,EAAC;AAACC,YAAAA,GAAG,EAACY,UAAU,CAACb,GAAG,CAACG,QAAL,CAAf;AAA+BC,YAAAA,GAAG,EAACS,UAAU,CAACb,GAAG,CAACK,SAAL;AAA7C,WAAN;AAAqES,UAAAA,MAAM,EAAC;AAA5E,SAAd;AACD,OAXG,CAAN;AAaD,KArCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXf,MAAAA,GAAG,EAAC,IADO;AAEXc,MAAAA,MAAM,EAAC;AAFI,KAAb;AAID;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,QAAL;AACD;;AAEDmB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAClB;AACE,QAAI,KAAKJ,KAAL,CAAWf,GAAX,IAAkB,IAAlB,IAA2BmB,SAAS,CAACnB,GAAV,IAAiB,KAAKe,KAAL,CAAWf,GAA3D,EACA;AACE,WAAKoB,SAAL,CAAe,KAAKL,KAAL,CAAWf,GAA1B;AACD,KAHD,MAII;AACFqB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;;AAkBD,QAAMF,SAAN,CAAgBpB,GAAhB,EACA;AACE,QAAIuB,GAAG,GAAG,qBAAoBvB,GAAG,CAACC,GAAxB,GAA6B,OAA7B,GAAqCD,GAAG,CAACI,GAAnD;AACA,QAAIoB,GAAG,GAAG,MAAMhB,KAAK,CAACe,GAAD,CAAL,CAAWd,IAAX,CAAgBC,QAAQ,IAAEA,QAAQ,CAACE,IAAT,EAA1B,CAAhB;AAEA,SAAKb,QAAL,CAAc;AAAEe,MAAAA,MAAM,EAACU,GAAG,CAACV;AAAb,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWf,GAArB;AAA0B,MAAA,MAAM,EAAE,KAAKe,KAAL,CAAWD,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtDyB;;AAyD5B,eAAetB,GAAf","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport Map from '../components/map.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      pos:null,\n      stores:null\n    }\n  }\n\n  componentDidMount() {\n    this.position()\n  }\n\n  componentDidUpdate(prevProps, prevState)\n  {\n    if (this.state.pos != null && (prevState.pos != this.state.pos))\n    {\n      this.getStores(this.state.pos)\n    }\n    else{\n      console.log(\"index.js loop\")\n    }\n  }\n\n  position = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ pos:{\n        lat: position.coords.latitude, \n        lng: position.coords.longitude\n      }}), \n      err => async function()\n      {\n        let ip = await fetch('https://api.ipify.org').then(response=>response.text())\n        let pos = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=02ff42e6f29c453e8d60df6139f5f9ed&ip='+ip).then(response=>response.json())\n    \n        this.setState({ pos:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}, stores:null})\n      }\n    )\n  }\n\n  async getStores(pos)\n  {\n    let url = '/api/stores?lat='+ pos.lat +'&lng='+pos.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ stores:res.stores })\n  }\n  \n  render() {\n    return (\n      <div>\n        <Map pos={this.state.pos} stores={this.state.stores}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}