{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport SideMenu from '../components/sideMenu.js';\nimport Loading from '../components/loading.js';\nimport WelcomeSection from '../components/welcomeSection.js';\nimport FridgeMagnetsSection from '../components/fridgeMagnetsSection.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"position\", async () => {\n      await navigator.geolocation.getCurrentPosition(position => this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n      }), err => async function () {\n        let ip = await fetch(process.env.IPIFY_URL).then(response => response.text());\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(response => response.json());\n        this.setState({\n          location: {\n            lat: parseFloat(pos.latitude),\n            lng: parseFloat(pos.longitude)\n          }\n        });\n      });\n    });\n\n    this.state = {\n      location: null,\n      user: null,\n      featuredStores: null,\n      isReady: false\n    };\n    this.startedAt = new Date();\n  }\n\n  componentDidMount() {\n    this.position();\n    this.user();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.location != null && prevState.location != this.state.location) {\n      this.featuredStores(this.state.location);\n    }\n\n    if (!this.state.isReady && this.state.location != null && this.state.featuredStores != null) {\n      let now = new Date();\n      let towait = 2500 - now.getTime() - this.startedAt.getTime();\n\n      if (towait > 0) {\n        setTimeout(() => {\n          this.setState({\n            isReady: true\n          });\n        }, towait);\n      } else {\n        this.setState({\n          isReady: true\n        });\n      }\n    }\n  }\n\n  async featuredStores(location) {\n    let url = '/api/featuredStores?lat=' + location.lat + '&lng=' + location.lng;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      featuredStores: res.stores\n    });\n  }\n\n  async user() {\n    let email = \"ca.rm@outlook.com\";\n    let url = '/api/user?email=' + email;\n    let res = await fetch(url).then(response => response.json());\n    this.setState({\n      user: res.user\n    });\n  }\n\n  render() {\n    if (this.state.isReady == false) {\n      return __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      });\n    } else {\n      const hasUser = this.state.user != null ? true : false;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, __jsx(SideMenu, {\n        user: hasUser ? this.state.user : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }), __jsx(WelcomeSection, {\n        currentLocation: this.state.currentLocation,\n        user: hasUser ? this.state.user : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }), __jsx(FridgeMagnetsSection, {\n        favoriteStores: hasUser ? this.state.user.favoriteStores : null,\n        featuredStores: this.state.featuredStores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/index.js"],"names":["React","Component","Fragment","SideMenu","Loading","WelcomeSection","FridgeMagnetsSection","App","constructor","props","navigator","geolocation","getCurrentPosition","position","setState","location","lat","coords","latitude","lng","longitude","err","ip","fetch","process","env","IPIFY_URL","then","response","text","pos","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","parseFloat","state","user","featuredStores","isReady","startedAt","Date","componentDidMount","componentDidUpdate","prevProps","prevState","now","towait","getTime","setTimeout","url","res","stores","email","render","hasUser","currentLocation","favoriteStores"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport SideMenu from '../components/sideMenu.js'\nimport Loading from '../components/loading.js'\nimport WelcomeSection from '../components/welcomeSection.js'\nimport FridgeMagnetsSection from '../components/fridgeMagnetsSection.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      location:null,\n      user:null,\n      featuredStores:null,\n      isReady:false\n    }\n\n    this.startedAt = new Date()\n  }\n\n  componentDidMount() {\n    this.position()\n    this.user()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.location != null && (prevState.location != this.state.location))\n    {\n      this.featuredStores(this.state.location)\n    }\n\n    if(!this.state.isReady && this.state.location !=null && this.state.featuredStores != null)\n    {\n      let now = new Date()\n      let towait = 2500 - now.getTime() - this.startedAt.getTime()\n      \n      if(towait>0)\n      {\n        setTimeout(() => {\n          this.setState({ isReady:true })\n        }, towait)\n      }\n      else\n      {\n        this.setState({ isReady:true })\n      }\n    }\n  }\n\n  position = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ location:{\n        lat: position.coords.latitude, \n        lng: position.coords.longitude\n      }}), \n      err => async function()\n      {\n        let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n    \n        this.setState({ location:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}})\n      }\n    )\n  }\n\n  async featuredStores(location)\n  {\n    let url = '/api/featuredStores?lat='+ location.lat +'&lng='+location.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ featuredStores:res.stores })\n  }\n\n  async user()\n  {\n    let email=\"ca.rm@outlook.com\"\n    let url = '/api/user?email='+ email\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ user:res.user })\n  }\n  \n  render() {\n    if(this.state.isReady == false)\n    {\n      return (<Loading/>)\n    }\n    else\n    {\n      const hasUser = (this.state.user!=null?true:false)\n      \n      return (\n        <div>\n          <SideMenu user={(hasUser?this.state.user:null)} />\n          <WelcomeSection currentLocation={this.state.currentLocation} user={(hasUser?this.state.user:null)}/>\n          <FridgeMagnetsSection favoriteStores={(hasUser?this.state.user.favoriteStores:null)} featuredStores={this.state.featuredStores}/>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}