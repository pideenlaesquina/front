{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/AddressDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction CustomDialog(props) {\n  const {\n    onClose,\n    selectedValue,\n    open,\n    addresses\n  } = props;\n  const [showForm, setShowForm] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    setShowForm(false);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  const handleAddClick = () => {\n    setShowForm(true);\n  };\n\n  const handleAddressConfirmed = () => {\n    setShowForm(false);\n    handleClose();\n    alert(\":)\");\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const getPredictions = async text => {\n    let url = \"https://maps.googleapis.com/maps/api/place/autocomplete/json?input=\" + text + \"&types=address&location=\" + props.deviceLocation.lat + \",\" + props.deviceLocation.lng + \"&radius=50000&strictbounds&language=es&key=YOUR_API_KEY\";\n    let res = await fetch(url).then(response => response.json());\n    return res;\n  };\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions([]);\n      return undefined;\n    }\n\n    getPredictions(inputValue, results => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n    return () => {\n      active = false;\n    };\n  }, [inputValue, getPredictions]);\n  return __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Selecciona tu direcci\\xF3n\"), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, addresses.map(item => __jsx(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(item),\n    key: item.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, item.type == \"house\" ? __jsx(HomeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 38\n    }\n  }) : __jsx(BusinessIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 51\n    }\n  }))), __jsx(ListItemText, {\n    primary: item.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleListItemClick(props.deviceLocation),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(MyLocationIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Ubicaci\\xF3n actual\",\n    secondary: props.deviceLocation.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleAddClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Agregar direcci\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), __jsx(Collapse, {\n    in: showForm,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: options,\n    getOptionLabel: option => option.address,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      label: \"Ingresa tu direcci\\xF3n\",\n      variant: \"outlined\",\n      size: \"small\",\n      fullWidth: true,\n      onChange: handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '200px',\n      background: \"lightgrey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: handleAddressConfirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Confirmar direcci\\xF3n\"))));\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Tu direcci\\xF3n: \", selectedValue.address), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Cambiar\"), __jsx(CustomDialog, {\n    selectedLocation: props.selectedLocation,\n    deviceLocation: props.deviceLocation,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    addresses: props.addresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/AddressDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","Collapse","DialogTitle","Dialog","Divider","AddIcon","MyLocationIcon","HomeIcon","BusinessIcon","TextField","Autocomplete","CustomDialog","props","onClose","selectedValue","open","addresses","showForm","setShowForm","useState","inputValue","setInputValue","options","setOptions","handleClose","handleListItemClick","value","handleAddClick","handleAddressConfirmed","alert","handleInputChange","event","target","getPredictions","text","url","deviceLocation","lat","lng","res","fetch","then","response","json","useEffect","active","undefined","results","map","item","address","type","option","params","width","height","background","propTypes","func","isRequired","bool","string","AddressDialog","setOpen","setSelectedValue","selectedLocation","handleClickOpen","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction CustomDialog(props) {\n  const { onClose, selectedValue, open, addresses } = props;\n  const [showForm, setShowForm] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    setShowForm(false)\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  const handleAddClick = () => {\n    setShowForm(true)\n  };\n\n  const handleAddressConfirmed = () => {\n    setShowForm(false)\n    handleClose()\n    alert(\":)\")\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  }\n\n  const getPredictions = async (text) => {\n    let url = \"https://maps.googleapis.com/maps/api/place/autocomplete/json?input=\"+text+\"&types=address&location=\"+props.deviceLocation.lat+\",\"+props.deviceLocation.lng+\"&radius=50000&strictbounds&language=es&key=YOUR_API_KEY\"\n    let res = await fetch(url).then(response=>response.json())\n\n    return res\n  }\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions([]);\n      return undefined;\n    }\n\n    getPredictions(inputValue, (results) => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, getPredictions]);\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Selecciona tu dirección</DialogTitle>\n      <List>\n        {addresses.map((item) => (\n          <ListItem button onClick={() => handleListItemClick(item)} key={item.address}>\n            <ListItemAvatar>\n              <Avatar>\n                {(item.type==\"house\"?<HomeIcon />:<BusinessIcon />)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={item.address} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick(props.deviceLocation)}>\n          <ListItemAvatar>\n            <Avatar>\n              <MyLocationIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Ubicación actual\" secondary={props.deviceLocation.address} />\n        </ListItem>\n        <Divider />\n        <ListItem autoFocus button onClick={() => handleAddClick()}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Agregar dirección\" />\n        </ListItem>\n        <Collapse in={showForm} timeout=\"auto\" unmountOnExit>\n          <div>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={options}\n            getOptionLabel={(option) => option.address}\n            renderInput={(params) => \n                <TextField \n                  {...params} \n                  label=\"Ingresa tu dirección\" \n                  variant=\"outlined\" \n                  size=\"small\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              }\n          />\n          </div>\n          <div id=\"map\" style={{width:'100%', height:'200px', background:\"lightgrey\"}}></div>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAddressConfirmed}>\n            Confirmar dirección\n          </Button>\n        </Collapse>\n      </List>\n    </Dialog>\n  );\n}\n\nCustomDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function AddressDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.selectedLocation);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width:'100%', textAlign:'center'}}>\n      <span>\n        <small>Tu dirección: {selectedValue.address}</small>\n        <br></br>\n        <Button onClick={handleClickOpen}>Cambiar</Button>\n        <CustomDialog \n          selectedLocation={props.selectedLocation} \n          deviceLocation={props.deviceLocation} \n          selectedValue={selectedValue} \n          open={open} \n          onClose={handleClose}\n          addresses={props.addresses}\n        />\n      </span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}