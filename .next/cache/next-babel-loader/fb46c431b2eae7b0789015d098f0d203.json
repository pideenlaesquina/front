{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/crmock/pideenlaequina/front/components/LocationContext.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createContext, useContext } from 'react';\nimport AuthContext from './authContext.js';\nvar LocationContext = createContext(); // create a provider\n\nexport var LocationProvider = /*#__PURE__*/function (_Component) {\n  _inherits(LocationProvider, _Component);\n\n  var _super = _createSuper(LocationProvider);\n\n  function LocationProvider(props) {\n    var _this;\n\n    _classCallCheck(this, LocationProvider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"initialLocation\", function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(navigator.geolocation.getCurrentPosition(function (position) {\n                return _this.setState({\n                  location: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                  },\n                  selectedLocation: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                  }\n                });\n              }, function (err) {\n                return function _callee() {\n                  var ip, pos;\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _regeneratorRuntime.awrap(fetch(process.env.IPIFY_URL).then(function (response) {\n                            return response.text();\n                          }));\n\n                        case 2:\n                          ip = _context.sent;\n                          _context.next = 5;\n                          return _regeneratorRuntime.awrap(fetch(process.env.IPGEOLOCATION_API_URL + '/ipgeo?apiKey=' + process.env.IPGEOLOCATION_API_KEY + '&ip=' + ip).then(function (response) {\n                            return response.json();\n                          }));\n\n                        case 5:\n                          pos = _context.sent;\n                          this.setState({\n                            location: {\n                              lat: parseFloat(pos.latitude),\n                              lng: parseFloat(pos.longitude)\n                            },\n                            selectedLocation: {\n                              lat: parseFloat(pos.latitude),\n                              lng: parseFloat(pos.longitude)\n                            }\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, this, null, Promise);\n                };\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _this.state = {\n      location: null,\n      selectedLocation: null,\n      featuredStores: null,\n      stores: null,\n      isReady: true\n    };\n    return _this;\n  }\n\n  _createClass(LocationProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.location();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.selectedLocation != null && prevState.selectedLocation != this.state.selectedLocation) {\n        this.featuredStores(this.state.selectedLocation);\n        this.stores(this.state.selectedLocation);\n      }\n\n      if (!this.state.isReady && this.state.selectedLocation != null) {\n        this.setState({\n          isReady: true\n        });\n      }\n    }\n  }, {\n    key: \"updateLocation\",\n    value: function updateLocation(newLat, newLng) {\n      this.setState({\n        location: {\n          lat: parseFloat(newLat),\n          lng: parseFloat(newLng)\n        }\n      });\n    }\n  }, {\n    key: \"featuredStores\",\n    value: function featuredStores(location) {\n      var url, res;\n      return _regeneratorRuntime.async(function featuredStores$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = '/api/featuredStores?lat=' + location.lat + '&lng=' + location.lng;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              res = _context3.sent;\n              this.setState({\n                featuredStores: res.stores\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"stores\",\n    value: function stores(location) {\n      var url, res;\n      return _regeneratorRuntime.async(function stores$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              url = '/api/stores?lat=' + location.lat + '&lng=' + location.lng;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              res = _context4.sent;\n              this.setState({\n                stores: res.stores\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(LocationContext.Provider, {\n        value: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return LocationProvider;\n}(Component);\nexport default LocationContext;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/LocationContext.js"],"names":["React","Component","createContext","useContext","AuthContext","LocationContext","LocationProvider","props","navigator","geolocation","getCurrentPosition","position","setState","location","lat","coords","latitude","lng","longitude","selectedLocation","err","fetch","process","env","IPIFY_URL","then","response","text","ip","IPGEOLOCATION_API_URL","IPGEOLOCATION_API_KEY","json","pos","parseFloat","state","featuredStores","stores","isReady","prevProps","prevState","newLat","newLng","url","res","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext, useContext } from 'react';\nimport AuthContext from './authContext.js';\n\nconst LocationContext = createContext();\n\n// create a provider\nexport class LocationProvider extends Component {\n   \n  constructor(props)\n  {\n    super(props)\n    this. state = {\n      location:null,\n      selectedLocation:null,\n      featuredStores:null,\n      stores:null,\n      isReady:true,\n    }\n  }\n\n  componentDidMount() {\n    this.location();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.selectedLocation != null && (prevState.selectedLocation != this.state.selectedLocation))\n    {\n      this.featuredStores(this.state.selectedLocation)\n      this.stores(this.state.selectedLocation)\n    }\n\n    if(!this.state.isReady && this.state.selectedLocation !=null)\n    {\n      this.setState({ isReady:true })\n    }\n  }\n  \n  initialLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      position => this.setState({ \n        location:{\n          lat: position.coords.latitude, \n          lng: position.coords.longitude\n        },\n        selectedLocation:{\n          lat: position.coords.latitude, \n          lng: position.coords.longitude\n        }\n      }), \n      err => async function()\n      {\n        let ip = await fetch(process.env.IPIFY_URL).then(response=>response.text())\n        let pos = await fetch(process.env.IPGEOLOCATION_API_URL +'/ipgeo?apiKey='+process.env.IPGEOLOCATION_API_KEY+'&ip='+ip).then(response=>response.json())\n    \n        this.setState({ \n          location:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}, \n          selectedLocation:{lat:parseFloat(pos.latitude), lng:parseFloat(pos.longitude)}\n        })\n      }\n    )\n  }\n\n  updateLocation(newLat, newLng)\n  {\n    this.setState({ \n      location:{lat:parseFloat(newLat), lng:parseFloat(newLng)}, \n    })\n  }\n\n  async featuredStores(location)\n  {\n    let url = '/api/featuredStores?lat='+ location.lat +'&lng='+location.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ featuredStores:res.stores })\n  }\n\n  async stores(location)\n  {\n    let url = '/api/stores?lat='+ location.lat +'&lng='+location.lng\n    let res = await fetch(url).then(response=>response.json())\n    \n    this.setState({ stores:res.stores })\n  }\n\n  render() {\n    return (\n      <LocationContext.Provider value={this.state}>\n        {this.props.children}\n      </LocationContext.Provider>\n    );\n  }\n}\n\nexport default LocationContext;"]},"metadata":{},"sourceType":"module"}