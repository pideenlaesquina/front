{"ast":null,"code":"\"use strict\";\n\nvar _mongodb = _interopRequireDefault(require(\"../../middleware/mongodb.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The main, exported, function of the endpoint,\n// dealing with the request and subsequent response\nmodule.exports = async (req, res) => {\n  // Get a database connection, cached or otherwise,\n  // using the connection string environment variable as the argument\n  console.log(_mongodb.default);\n  const db = await (0, _mongodb.default)(); // Select the \"stores\" collection from the database\n\n  const collection = await db.collection('stores'); // Select the stores collection from the database\n\n  const stores = await collection.find({}).toArray(); // Respond with a JSON string of all stores in the collection\n\n  res.status(200).json({\n    stores\n  });\n};","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/pages/api/stores.js"],"names":["module","exports","req","res","console","log","Middleware","db","collection","stores","find","toArray","status","json"],"mappings":";;AAAA;;;;AAEA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AACA,QAAMC,EAAE,GAAG,MAAM,uBAAjB,CAJmC,CAMnC;;AACA,QAAMC,UAAU,GAAG,MAAMD,EAAE,CAACC,UAAH,CAAc,QAAd,CAAzB,CAPmC,CASnC;;AACA,QAAMC,MAAM,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoBC,OAApB,EAArB,CAVmC,CAYnC;;AACAR,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,IAAAA;AAAF,GAArB;AACD,CAdD","sourcesContent":["import Middleware from '../../middleware/mongodb.js';\n\n// The main, exported, function of the endpoint,\n// dealing with the request and subsequent response\nmodule.exports = async (req, res) => {\n  // Get a database connection, cached or otherwise,\n  // using the connection string environment variable as the argument\n  console.log(Middleware)\n  const db = await Middleware()\n\n  // Select the \"stores\" collection from the database\n  const collection = await db.collection('stores')\n\n  // Select the stores collection from the database\n  const stores = await collection.find({}).toArray()\n\n  // Respond with a JSON string of all stores in the collection\n  res.status(200).json({ stores })\n}"]},"metadata":{},"sourceType":"script"}