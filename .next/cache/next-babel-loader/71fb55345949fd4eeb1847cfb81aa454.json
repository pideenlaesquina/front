{"ast":null,"code":"var _jsxFileName = \"/home/crmock/pideenlaequina/front/components/Map.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport distance from './Distance';\nconst initialZoom = 15;\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      userMarker: null,\n      storeMarkers: [],\n      selectedStore: null\n    };\n  }\n\n  shouldComponentUpdate() {\n    if (this.props.pos == null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"hola\");\n\n    if (this.props.pos !== null && (this.props.stores !== null || this.props.selectedStore !== null)) {\n      console.log(\"hola-1\");\n\n      if (this.state.map === null) {\n        console.log(\"hola-2\");\n        let map = this.getMap(this.props.pos);\n        let userMarker = this.placeUserMarker(map, this.props.pos);\n        let storeMarkers = null;\n        let selectedStore = null;\n\n        if (this.props.stores !== null) {\n          storeMarkers = this.placeAllStoreMarkers(map, this.props.stores);\n        }\n\n        if (this.props.selectedStore !== null) {\n          selectedStore = this.placeAStoreMarker(map, this.props.selectedStore, true);\n        }\n\n        this.setState({\n          userMarker: userMarker,\n          map: map,\n          storeMarkers: storeMarkers,\n          selectedStore: selectedStore\n        });\n      }\n\n      if (this.state.map !== null && prevProps.pos !== this.props.pos) {\n        let userMarker = this.placeUserMarker(this.state.map, this.props.pos);\n        this.removeAllStoreMarkers();\n        this.setState({\n          userMarker: userMarker\n        });\n      }\n\n      if (this.state.map !== null && prevProps.stores !== this.props.stores) {\n        this.removeAllStoreMarkers();\n        let storeMarkers = this.placeAllStoreMarkers(this.state.map, this.props.stores);\n        this.setState({\n          storeMarkers: storeMarkers\n        });\n      }\n\n      if (this.state.map !== null && prevProps.selectedStore !== this.props.selectedStore) {\n        this.removeSelectedStoreMarker();\n        let selectedStore = this.placeAStoreMarker(this.state.map, this.props.selectedStore);\n        this.setState({\n          selectedStore: selectedStore\n        });\n      }\n    }\n  }\n\n  getMap(pos) {\n    let map = null;\n\n    if (this.state.map == null) {\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: pos,\n        zoom: initialZoom,\n        zoomControl: false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n        streetViewControl: false\n      });\n    } else {\n      map = this.state.map;\n    }\n\n    return map;\n  }\n\n  placeUserMarker(map, pos, pan = true) {\n    if (this.state.userMarker != null) {\n      this.state.userMarker.setMap(null);\n    }\n\n    let marker = new google.maps.Marker({\n      position: pos,\n      icon: './map/user_icon.svg',\n      title: \"Tu ubicación\",\n      draggable: false\n    });\n    marker.setMap(map);\n\n    if (pan) {\n      this.panToPos(map, pos);\n    }\n\n    return marker;\n  }\n\n  panToPos(map, pos, zoom = initialZoom) {\n    map.setZoom(zoom);\n    map.panTo(pos);\n  }\n\n  placeAllStoreMarkers(map, stores) {\n    let list = [];\n\n    for (let i = 0; i < stores.length; i++) {\n      let store = stores[i];\n\n      if (store._id == null || store.lat == null || store.lng == null || store.name == null) {\n        console.log(\"Skiped store: \" + store.name);\n        continue;\n      }\n\n      let marker = this.placeAStoreMarker(map, store);\n      list.push(marker);\n    }\n\n    return list;\n  }\n\n  removeAllStoreMarkers() {\n    for (let i = 0; i < this.state.storeMarkers.length; i++) {\n      this.state.storeMarkers[i].setMap(null);\n    }\n  }\n\n  removeSelectedStoreMarker() {\n    this.state.selectedStore.setMap(null);\n  }\n\n  placeAStoreMarker(map, store, selected = false) {\n    categories = ['pharmacy', 'bakery', 'vegetableStore', 'hardwareStore', 'butchery', 'drycleaner', 'stationeryStore', 'petStore', 'liquorStore', 'fastFood', 'restaurant', 'groeceryStore', 'store'];\n    labels = ['Droguería', 'Panadería', 'Fruver', 'Ferretería', 'Carnicería', 'Lavandería', 'Papelería', 'Mascotas', 'Licorera', 'Comida rápida', 'Restaurante', 'Tienda', 'Otro'];\n\n    if (store.type === null) {\n      store.type = \"store\";\n    }\n\n    if (!allCategories.includes(store.type)) {\n      store.type = \"store\";\n    }\n\n    let i = categories.indexOf(store.type);\n    store.typeLabel = label[i];\n    let icon = '';\n\n    if (selected) {\n      icon = './map/' + store.type + \"_icon_selected.svg\";\n    } else {\n      icon = './map/' + store.type + \"_icon.svg\";\n    }\n\n    let icon_hover = './map/' + store.type + \"_icon_hover.svg\";\n    let marker = new google.maps.Marker({\n      position: {\n        lat: store.lat,\n        lng: store.lng\n      },\n      icon: icon,\n      title: store.name,\n      draggable: false,\n      //custom data\n      selected: selected,\n      id: store._id,\n      distance: distance(this.props.pos.lat, this.props.pos.lng, store.lat, store.lng)\n    });\n    google.maps.event.addListener(marker, 'click', function () {\n      if (!marker.selected) {\n        this.handleStoreMarkerClick(marker.id);\n      }\n    });\n    google.maps.event.addListener(marker, 'mouseover', function () {\n      marker.setIcon(icon_hover);\n    });\n    google.maps.event.addListener(marker, 'mouseout', function () {\n      marker.setIcon(icon);\n    });\n    marker.setMap(map);\n    return marker;\n  }\n\n  findStore(id) {\n    for (let i = 0; i < this.props.stores.length; i++) {\n      const element = this.props.stores[i];\n\n      if (element._id === id) {\n        return element;\n      }\n    }\n\n    return null;\n  }\n\n  handleStoreMarkerClick(id) {\n    alert(\"ya merito\");\n    let store = this.findStore();\n\n    if (store !== null) {\n      alert(\"ya mero merito\");\n      this.props.openSelectedStore(store);\n    }\n  }\n\n  render() {\n    let google_url = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBt0ZCE1kAklBJiBnCYGX6kl0tglLcKlLI';\n    return __jsx(\"div\", {\n      style: {\n        height: \"100%\",\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }\n    }, __jsx(\"script\", {\n      src: google_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"100%\",\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/crmock/pideenlaequina/front/components/Map.js"],"names":["React","Head","distance","initialZoom","Map","Component","constructor","props","state","map","userMarker","storeMarkers","selectedStore","shouldComponentUpdate","pos","componentDidMount","componentDidUpdate","prevProps","prevState","console","log","stores","getMap","placeUserMarker","placeAllStoreMarkers","placeAStoreMarker","setState","removeAllStoreMarkers","removeSelectedStoreMarker","google","maps","document","getElementById","center","zoom","zoomControl","mapTypeControl","fullscreenControl","clickableIcons","streetViewControl","pan","setMap","marker","Marker","position","icon","title","draggable","panToPos","setZoom","panTo","list","i","length","store","_id","lat","lng","name","push","selected","categories","labels","type","allCategories","includes","indexOf","typeLabel","label","icon_hover","id","event","addListener","handleStoreMarkerClick","setIcon","findStore","element","alert","openSelectedStore","render","google_url","height","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport distance from './Distance'\n\nconst initialZoom = 15\n\nclass Map extends React.Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      map: null,\n      userMarker:null,\n      storeMarkers:[],\n      selectedStore: null\n    }\n  }\n\n  shouldComponentUpdate() {\n    if(this.props.pos == null)\n    {\n      return false\n    }\n    return true\n  }\n\n  componentDidMount()\n  {\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) \n  {\n    console.log(\"hola\")\n    if(this.props.pos !== null && (this.props.stores !== null || this.props.selectedStore !== null) )\n    {\n      console.log(\"hola-1\")\n      if(this.state.map === null)\n      {\n        console.log(\"hola-2\")\n        let map=this.getMap(this.props.pos)\n        let userMarker=this.placeUserMarker(map, this.props.pos)\n        let storeMarkers=null \n        let selectedStore=null\n\n        if(this.props.stores!==null)\n        {\n          storeMarkers = this.placeAllStoreMarkers(map, this.props.stores)\n        }\n\n        if(this.props.selectedStore!==null)\n        {\n          selectedStore = this.placeAStoreMarker(map, this.props.selectedStore, true)\n        }\n\n        this.setState ({\n          userMarker:userMarker,\n          map: map,\n          storeMarkers: storeMarkers,\n          selectedStore: selectedStore\n        })\n      }\n      \n      if(this.state.map !== null && prevProps.pos !== this.props.pos)\n      {\n        let userMarker=this.placeUserMarker(this.state.map, this.props.pos)\n        this.removeAllStoreMarkers()\n\n        this.setState ({\n          userMarker:userMarker\n        })\n      }\n\n      if(this.state.map !== null && prevProps.stores !== this.props.stores)\n      {\n        this.removeAllStoreMarkers()\n        let storeMarkers = this.placeAllStoreMarkers(this.state.map, this.props.stores)\n\n        this.setState ({\n          storeMarkers: storeMarkers\n        })\n      }\n      \n      if(this.state.map !== null && prevProps.selectedStore !== this.props.selectedStore)\n      {\n        this.removeSelectedStoreMarker()\n        let selectedStore = this.placeAStoreMarker(this.state.map, this.props.selectedStore)\n\n        this.setState ({\n          selectedStore: selectedStore\n        })\n      }\n    }\n  }\n\n  getMap(pos)\n  {\n    let map = null\n    if(this.state.map == null)\n    {\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: pos,\n        zoom: initialZoom,\n        zoomControl:false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n        streetViewControl: false\n      })\n    }\n    else\n    {\n      map = this.state.map\n    }\n    return map\n  }\n\n  placeUserMarker(map, pos, pan=true)\n  {\n    if(this.state.userMarker != null)\n    {\n      this.state.userMarker.setMap(null);\n    }\n\n    let marker = new google.maps.Marker({\n      position: pos,\n      icon: './map/user_icon.svg',\n      title: \"Tu ubicación\",\n      draggable:false,\n    })\n\n    marker.setMap(map);\n\n    if(pan)\n    {\n      this.panToPos(map, pos)\n    }\n\n    return marker\n  }\n\n  panToPos(map, pos, zoom=initialZoom)\n  {\n    map.setZoom(zoom);\n    map.panTo(pos);\n  }\n\n  placeAllStoreMarkers(map, stores)\n  {\n    let list = []\n    \n    for (let i = 0; i < stores.length; i++) {\n      let store = stores[i]\n      if(store._id == null || store.lat == null || store.lng == null || store.name == null)\n      {\n        console.log(\"Skiped store: \"+store.name)\n        continue\n      }\n\n      let marker = this.placeAStoreMarker(map, store)\n      list.push(marker)\n    }\n\n    return list\n  }\n\n  removeAllStoreMarkers()\n  {\n    for (let i = 0; i < this.state.storeMarkers.length; i++)\n    {\n      this.state.storeMarkers[i].setMap(null)\n    }\n  }\n\n  removeSelectedStoreMarker()\n  {\n    this.state.selectedStore.setMap(null)\n  }\n\n  placeAStoreMarker(map, store, selected=false)\n  {\n    categories=[\n      'pharmacy', \n      'bakery', \n      'vegetableStore', \n      'hardwareStore',\n      'butchery', \n      'drycleaner',\n      'stationeryStore',\n      'petStore',\n      'liquorStore',\n      'fastFood',\n      'restaurant',\n      'groeceryStore',\n      'store'\n    ]\n\n    labels=[\n      'Droguería',\n      'Panadería',\n      'Fruver',\n      'Ferretería',\n      'Carnicería',\n      'Lavandería',\n      'Papelería',\n      'Mascotas',\n      'Licorera',\n      'Comida rápida',\n      'Restaurante',\n      'Tienda',\n      'Otro'\n    ]\n\n    if(store.type===null)\n    {\n      store.type=\"store\"\n    }\n\n    if(!allCategories.includes(store.type))\n    {\n      store.type=\"store\"\n    }\n    \n    let i = categories.indexOf(store.type)\n    store.typeLabel = label[i]\n\n    let icon = '';\n    if(selected)\n    {\n      icon = './map/' + store.type + \"_icon_selected.svg\";\n    }\n    else\n    {\n      icon = './map/' + store.type + \"_icon.svg\";\n    }\n    let icon_hover = './map/' + store.type + \"_icon_hover.svg\";\n    \n    let marker = new google.maps.Marker({\n      position: {lat:store.lat, lng:store.lng},\n      icon: icon,\n      title:store.name,\n      draggable:false,\n      //custom data\n      selected:selected,\n      id:store._id,\n      distance:distance(this.props.pos.lat, this.props.pos.lng, store.lat, store.lng)\n    })\n\n    google.maps.event.addListener(marker, 'click', function() {\n      if(!marker.selected)\n      {\n        this.handleStoreMarkerClick(marker.id);\n      }\n    })\n\n    google.maps.event.addListener(marker, 'mouseover', function() {\n      marker.setIcon(icon_hover);\n    })\n\n    google.maps.event.addListener(marker, 'mouseout', function() {\n      marker.setIcon(icon);    \n    })\n\n    marker.setMap(map)\n    return marker\n  }\n\n  findStore(id)\n  {\n    for (let i = 0; i < this.props.stores.length; i++) {\n      const element = this.props.stores[i];\n\n      if(element._id === id)\n      {\n        return element\n      }\n    }\n    return null\n  }\n\n  handleStoreMarkerClick(id)\n  {\n    alert(\"ya merito\")\n    let store = this.findStore()\n\n    if(store !== null)\n    {\n      alert(\"ya mero merito\")\n      this.props.openSelectedStore(store)\n    }\n  }\n\n  render () {\n    let google_url = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBt0ZCE1kAklBJiBnCYGX6kl0tglLcKlLI'\n\n    return (\n      <div style={{height:\"100%\", width:'100%'}}>\n        <Head>\n          <script src={google_url} ></script>\n        </Head>\n        <div id=\"map\" style={{height:\"100%\", width:'100%'}}></div>\n      </div>\n    )\n  }\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}