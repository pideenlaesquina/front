{"version":3,"file":"static/webpack/static/development/pages/index.js.37a2192525248af0a80f.hot-update.js","sources":["webpack:///./components/SearchCard.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Map from '../components/Map'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport Fab from '@material-ui/core/Fab'\nimport Chip from '@material-ui/core/Chip'\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport HistoryIcon from '@material-ui/icons/History'\n\nclass SearchCard extends Component {\n  \n  constructor(props)\n  {\n    super(props)\n    this.state={\n      storesToShow:[],\n      selectAll:false,\n      updateNeeded:false,\n      onlyFavorites:false,\n      onlyHistory:false,\n      categories: [\n        {type:'pharmacy', name:\"Droguería\", selected:true},\n        {type:'bakery', name:\"Panadería\", selected:true},\n        {type:'vegetableStore', name:\"Fruver\", selected:true},\n        {type:'hardwareStore', name:\"Ferretería\", selected:true},\n        {type:'butchery', name:\"Carnicería\", selected:true},\n        {type:'drycleaner', name:\"Lavandería\", selected:true},\n        {type:'stationeryStore', name:\"Papelería\", selected:true},\n        {type:'petStore', name:\"Mascotas\", selected:true},\n        {type:'liquorStore', name:\"Licores\", selected:true},\n        {type:'fastFood', name:\"Comida Rápida\", selected:true},\n        {type:'restaurant', name:\"Restaurante\", selected:true},\n        {type:'groeceryStore', name:\"Tienda\", selected:true},\n        {type:'store', name:\"Otro\", selected:true}\n      ]\n    }\n  }\n\n  handleChipClick(index)\n  {\n    let newCategories = JSON.parse(JSON.stringify(this.state.categories))\n    if(newCategories[index].selected)\n    {\n      newCategories[index].selected = false\n    }\n    else\n    {\n      newCategories[index].selected = true\n    }\n    this.setState({categories:newCategories})\n  }\n\n  handleSelectAllClick()\n  {\n    let newCategories = JSON.parse(JSON.stringify(this.state.categories))\n    let newSelectAll = JSON.parse(JSON.stringify(this.state.selectAll))\n\n    if(this.state.selectAll)\n    {\n      for (let i = 0; i < newCategories.length; i++) {\n        newCategories[i].selected=true \n      }\n      newSelectAll=false\n    }\n    else\n    {\n      for (let i = 0; i < newCategories.length; i++) {\n        newCategories[i].selected=false\n      }\n      newSelectAll=true\n    }\n\n    this.setState({categories:newCategories, selectAll:newSelectAll})\n  }\n\n  handleFavoritesOnlyClick(index)\n  {\n    this.setState({onlyFavorites:!this.state.onlyFavorites})\n  }\n\n  handleHistoryOnlyClick(index)\n  {\n    this.setState({onlyHistory:!this.state.onlyHistory})\n  }\n\n  activeCategories()\n  {\n    let list = []\n    for (let i = 0; i < this.state.categories.length; i++) {\n      const element = this.state.categories[i];\n      \n      if(element.selected)\n      {\n        list.push(element.type)\n      }\n    }\n    return list\n  }\n\n  allCategories()\n  {\n    let list = []\n    for (let i = 0; i < this.state.categories.length; i++) {\n      const element = this.state.categories[i];\n\n      list.push(element.type)\n    }\n    return list\n  }\n\n  updateStoreList()\n  {\n    let allCategories = this.allCategories()\n    let activeCategories = this.activeCategories()\n\n    let newStoresToShow = []\n    for (let i = 0; i < this.props.stores.length; i++) {\n      const element = this.props.stores[i];\n      let mustBeIncluded = true\n      \n      if(element.type===null)\n      {\n        element.type=\"store\"\n      }\n      else\n      {\n        if(!allCategories.includes(element.type))\n        {\n          element.type=\"store\"\n        }\n      }\n\n      if(!activeCategories.includes(element.type))\n      {\n        mustBeIncluded = false\n      }\n\n      if(!mustBeIncluded && this.state.onlyFavorites)\n      {\n        if(!this.props.favoriteStores.includes(element.id))\n        {\n          mustBeIncluded = false\n        }\n      }\n\n      if(!mustBeIncluded && this.state.onlyHistory)\n      {\n        if(!this.props.historyStores.includes(element.id))\n        {\n          mustBeIncluded = false\n        }\n      }\n\n      if(mustBeIncluded)\n      {\n        newStoresToShow.push(element)\n      }\n    }\n\n    this.setState({updateNeeded:false, storesToShow: newStoresToShow})\n  }\n\n  componentDidMount()\n  {\n    this.updateStoreList()\n  }\n\n  componentDidUpdate(prevProps, prevState)\n  {\n    if( (JSON.stringify(prevState.categories) !== JSON.stringify(this.state.categories) )\n      || (prevState.onlyHistory !== this.state.onlyHistory)\n      || (prevState.onlyFavorites !== this.state.onlyFavorites)\n    )\n    {\n      this.setState({updateNeeded:true})\n    }\n\n    if(this.state.updateNeeded)\n    {\n      this.updateStoreList()\n    }\n  }\n\n  render() {\n    \n    return (\n      <div>{(this.props.stores && (<div>\n        <Dialog \n          aria-labelledby=\"simple-dialog-title\" \n          open={this.props.open}\n          fullScreen\n          style={{height:\"100%\", position:\"relative\", background:'#ffcf02'}}\n        >\n            <div style={{height:'100%', background:'lightgrey'}}>\n              <Map \n                stores={this.state.storesToShow} \n                pos={this.props.location}\n                openSelectedStore={(newStore)=>this.props.openSelectedStore(newStore)}  \n              />\n            </div>\n\n            <div style={{display:'relative'}}>\n              <Fab size=\"small\" aria-label=\"menu\" onClick={() => this.props.close()} style={{position:\"absolute\", top:\"10px\", left:\"15px\"}}>\n                <ArrowBackIcon />\n              </Fab>\n              \n              <div style={{margin:'10px', textAlign:'center'}}>\n                <h3>Selecciona una tienda en el mapa</h3>\n                <h4 style={{marginBottom:'0'}}>Filtros</h4>\n                <Chip\n                  variant={this.state.onlyFavorites?\"default\":\"outlined\"}\n                  size=\"small\"\n                  label=\"Solo favoritos\"\n                  color=\"secondary\"\n                  clickable\n                  icon={<FavoriteIcon />}\n                  onClick={()=>this.handleFavoritesOnlyClick()}\n                  style={{marginTop:'10px', marginBottom:'10px', marginRight:'2px'}}\n                />\n                <Chip\n                  variant={this.state.onlyHistory?\"default\":\"outlined\"}\n                  size=\"small\"\n                  label=\"Pedidos anteriores\"\n                  clickable\n                  icon={<HistoryIcon />}\n                  onClick={()=>this.handleHistoryOnlyClick()}\n                  style={{marginTop:'10px', marginBottom:'10px', marginLeft:'2px'}}\n                />\n                <br></br>\n                {this.state.categories.map( (item, index) => (\n                  <Chip\n                    key={item.type}\n                    variant={item.selected?\"default\":\"outlined\"}\n                    size=\"small\"\n                    label={item.name}\n                    clickable\n                    color=\"primary\"\n                    onClick={()=>this.handleChipClick(index)}\n                    style={{margin:'2px'}}\n                  />\n                ))}\n                <br></br>\n                <Chip\n                  size=\"small\"\n                  label=\"Seleccionar todo/ninguno\"\n                  clickable\n                  color=\"default\"\n                  onClick={()=>this.handleSelectAllClick()}\n                  style={{margin:'8px'}}\n                />\n              </div>\n            </div>\n        </Dialog>\n      </div>))}\n      </div>\n    )\n  }\n}\n\nexport default SearchCard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAnBA;AAFA;AAwBA;AACA;;;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAEA;AAAA;AAAA;AACA;;;AAEA;AAEA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;;;AAEA;AAEA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AAvPA;AACA;AAyPA;;;;A","sourceRoot":""}